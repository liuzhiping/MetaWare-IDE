;HEADER*******************************************************************
;****************************************************************************
;**
;** Copyright (c) 1989-2007 ARC International.
;** All rights reserved                                          
;**                                                              
;** This software embodies materials and concepts which are      
;** confidential to ARC International and is made
;** available solely pursuant to the terms of a written license   
;** agreement with ARC International             
;**
;** File: psp_dsp52prv.met
;**
;** Comments:      
;**   This assembler header file contains private declarations for 
;** use with the mqx DSP assembler files
;**                                                               
;**
;*************************************************************************
;END**********************************************************************

;------------------------------------------------------------------------
;                       IMPORTS
;
; pspcont.s is automatically generated by the MetaWare compiler when
; it compiles psp_ctx.c.  We do this because ARC is so configurable.
; We'd like to tools themselves to define the field offsets rather
; than having to do it by hand.  What makes this nice is that we can
; #ifdef parts of the register save structures in the C source code
; and the assembly register save/restore routines are automatically
; configured identically.  A new pragma asm_field_offsets was added to
; the MetaWare compiler to support this.  You will need to upgrade
; your compiler "front end" if it does not recognize this pragma.

.include "./pspcont.s"


; These must match their counter-parts in arcta52.h
.equ DSP_USES_XY,          0x00010000
.equ DSP_USES_CRC,         0x00020000
.equ DSP_USES_VBFDW,       0x00040000


.ifdef __Xxmac_24
   .set DSP_XMAC_PRESENT, 1
.endif

.ifdef __Xxmac_d16
   .set DSP_XMAC_PRESENT, 1
.endif

; Start CR 2180 
.ifdef __Xmul32x16
   .set DSP_XMAC_PRESENT, 1
.endif
; End CR 2180 


.ifdef __Xxy
   .set DSP_ACCS_PRESENT, 1
.else
.ifdef DSP_XMAC_PRESENT
   .set DSP_ACCS_PRESENT, 1
.endif
.endif

.ifdef DSP_ACCS_PRESENT
   .extCoreRegister R56, 56, r|w, can_shortcut  
.ifndef __Xmult32
   .extCoreRegister R57, 57, r|w, can_shortcut  
.endif
.endif

; marks@12/23/02 FBF now auto defined from ./pspcont.s
; marks@12/23/02 CRC now auto defined from ./pspcont.s
; marks@12/23/02 XY now auto defined from ./pspcont.s
; marks@12/23/02 VBFDW now auto defined from ./pspcont.s


; Aux register numbers
; 
; 6/02/2003
; NOTE, the aux register numbers are defined in HCDIR/bin/arcexlib.s.
; We don't want to redefine them here because a user can muck with the
; core and alter the aux numbers.  Thus, we want him to only have to
; edit arcexlib.s once to affect his changes everywhere.

.ifdef __Xvbfdw
.equ PSP_AUX_VBFDW_MODE,     aux_vbfdw_mode
.equ PSP_AUX_VBFDW_BM0,      aux_vbfdw_bm0
.equ PSP_AUX_VBFDW_BM1,      aux_vbfdw_bm1
.equ PSP_AUX_VBFDW_ACCU,     aux_vbfdw_accu
.equ PSP_AUX_VBFDW_OFST,     aux_vbfdw_ofst
.equ PSP_AUX_VBFDW_INTSTAT,  aux_vbfdw_intstat
.endif

.ifdef __Xcrc
.equ PSP_AUX_CRC_POLY,       aux_crc_poly
.equ PSP_AUX_CRC_MODE,       aux_crc_mode
.endif

; Start CR 2180 
; .if $defined(__Xxmac_d16) || $defined(__Xxmac_24)
.if $defined(__Xxmac_d16) || $defined(__Xxmac_24) || $defined(__Xmul32x16)
; End CR 2180
.equ PSP_AUX_MACMODE,        aux_macmode

; Start CR 2180 
.if $core_version < __ARC700_VER
.equ PSP_AUX_FBF_STORE_16,   aux_fbf_store_16
.endif
; End CR 2180

.endif

.ifdef __Xxmac_d16
.equ PSP_AUX_XMAC0_16,       aux_xmac0
.equ PSP_AUX_XMAC1_16,       aux_xmac1
.equ PSP_AUX_XMAC2_16,       aux_xmac2
.endif

.ifdef __Xxmac_24
.equ PSP_AUX_XMAC0_24,       aux_xmac0_24
.equ PSP_AUX_XMAC1_24,       aux_xmac1_24
.equ PSP_AUX_XMAC2_24,       aux_xmac2_24
.endif

; Start CR 2180 
.ifdef __Xmul32x16
.equ PSP_AUX_XMACLW_H,       aux_xmac1632h 
.equ PSP_AUX_XMACLW_L,       aux_xmac1632l
.endif
; End CR 2180

.ifdef __Xxy
.equ PSP_AUX_XY_AX0,         ax0
.equ PSP_AUX_XY_AX1,         ax1
.equ PSP_AUX_XY_AX2,         ax2
.equ PSP_AUX_XY_AX3,         ax3
.equ PSP_AUX_XY_AY0,         ay0
.equ PSP_AUX_XY_AY1,         ay1
.equ PSP_AUX_XY_AY2,         ay2
.equ PSP_AUX_XY_AY3,         ay3
.equ PSP_AUX_XY_MX00,        mx00
.equ PSP_AUX_XY_MX01,        mx01
.equ PSP_AUX_XY_MX10,        mx10
.equ PSP_AUX_XY_MX11,        mx11
.equ PSP_AUX_XY_MX20,        mx20
.equ PSP_AUX_XY_MX21,        mx21
.equ PSP_AUX_XY_MX30,        mx30
.equ PSP_AUX_XY_MX31,        mx31
.equ PSP_AUX_XY_MY00,        my00
.equ PSP_AUX_XY_MY01,        my01
.equ PSP_AUX_XY_MY10,        my10
.equ PSP_AUX_XY_MY11,        my11
.equ PSP_AUX_XY_MY20,        my20
.equ PSP_AUX_XY_MY21,        my21
.equ PSP_AUX_XY_MY30,        my30
.equ PSP_AUX_XY_MY31,        my31
.equ PSP_AUX_XY_CFG,         xyconfig
.equ PSP_AUX_XY_BURSTSYS,    burstsys
.equ PSP_AUX_XY_BURSTXYM,    burstxym
.equ PSP_AUX_XY_BURSTSZ,     burstsz
.equ PSP_AUX_XY_BURSTVAL,    burstval
.equ PSP_AUX_XY_LSBASEX,     xylsbasex
.equ PSP_AUX_XY_LSBASEY,     xylsbasey
.endif

; EOF
