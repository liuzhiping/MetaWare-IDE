allback]refreshDisplay(obj=3,25)  queue size=102
1663:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=103
1664:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=104
1665:[callback]updateViews(obj=3,)  queue size=105
1666:[callback]logMessage(obj=1,null,[4] Execution stopped.
)  queue size=106
1667:[callback]setStatus(obj=15,28,Execution stopped.)  queue size=107
1668:[callback]logMessage(obj=1,null,[4]     16884fa _mwfmul_+0x9e  add.c        %r1,%r1,%r2
)  queue size=108
1669:[callback]setStatus(obj=15,28,)  queue size=109
1670:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=110
1671:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=111
1672:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=112
1673:[callback]removeHighlights(obj=15,28,-1)  queue size=113
1674:[callback]setLine(obj=15,28,0,Image specifications: 8-bit gray scale -- scaled)  queue size=114
1675:[callback]setLine(obj=15,28,1,Image specification not yet valid -- specify a non-zero address)  queue size=115
1676:[callback]setLine(obj=15,28,2,  Address    : 0x0)  queue size=116
1677:[callback]setLine(obj=15,28,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=117
1678:[callback]setLine(obj=15,28,4,  Auto-update: on)  queue size=118
1679:[callback]setLine(obj=15,28,5, Timed-update: off)  queue size=119
1680:[callback]setLine(obj=15,28,6,    Scaling  : on)  queue size=120
1681:[callback]setLine(obj=15,28,7,  0 -- number of times image was read from memory.)  queue size=121
1682:[callback]setLine(obj=15,28,8,  0 -- number of times image changed and was updated to display)  queue size=122
1683:[callback]setBlanks(obj=15,28,9,14)  queue size=123
1684:[callback]refreshDisplay(obj=15,28)  queue size=124
1685:[callback]setScrollBar(obj=15,28,0,15,0,8,14)  queue size=125
1686:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=126
1687:[callback]processStopped(obj=13,null,1)  queue size=127
1688:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
1689:[SERVER]SERVER LOOP: reply sent
1690:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1691:[SERVER]SERVER LOOP: reply sent
1692:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1693:[SERVER]SERVER LOOP: reply sent
1694:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1695:[SERVER]SERVER LOOP: reply sent
1696:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1697:[SERVER]SERVER LOOP: reply sent
1698:[callback]logMessage(obj=1,null,[1] Flushing data cache.
)  queue size=125
1699:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1700:[SERVER]SERVER LOOP: reply sent
1701:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1702:[SERVER]SERVER LOOP: reply sent
1703:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1704:[SERVER]SERVER LOOP: reply sent
1705:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1706:[SERVER]SERVER LOOP: reply sent
1707:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1708:[SERVER]SERVER LOOP: reply sent
1709:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1710:[SERVER]SERVER LOOP: reply sent
1711:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1712:[SERVER]SERVER LOOP: reply sent
1713:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1714:[SERVER]SERVER LOOP: reply sent
1715:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1716:[SERVER]SERVER LOOP: reply sent
1717:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1718:[SERVER]SERVER LOOP: reply sent
1719:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1720:[SERVER]SERVER LOOP: reply sent
1721:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1722:[SERVER]SERVER LOOP: reply sent
1723:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
1724:[SERVER]SERVER LOOP: reply sent
1725:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1726:[SERVER]SERVER LOOP: reply sent
1727:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1728:[SERVER]SERVER LOOP: reply sent
1729:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1730:[SERVER]SERVER LOOP: reply sent
1731:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1732:[SERVER]SERVER LOOP: reply sent
1733:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1734:[SERVER]SERVER LOOP: reply sent
1735:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1736:[SERVER]SERVER LOOP: reply sent
1737:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1738:[SERVER]SERVER LOOP: reply sent
1739:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1740:[SERVER]SERVER LOOP: reply sent
1741:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1742:[SERVER]SERVER LOOP: reply sent
1743:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1744:[SERVER]SERVER LOOP: reply sent
1745:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1746:[SERVER]SERVER LOOP: reply sent
1747:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1748:[SERVER]SERVER LOOP: reply sent
1749:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1750:[SERVER]SERVER LOOP: reply sent
1751:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
1752:[SERVER]SERVER LOOP: reply sent
1753:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1754:[SERVER]SERVER LOOP: reply sent
1755:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1756:[SERVER]SERVER LOOP: reply sent
1757:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1758:[SERVER]SERVER LOOP: reply sent
1759:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1760:[SERVER]SERVER LOOP: reply sent
1761:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
1762:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
1763:[SERVER]SERVER LOOP: reply sent
1764:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1765:[SERVER]SERVER LOOP: reply sent
1766:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1767:[SERVER]SERVER LOOP: reply sent
1768:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1769:[SERVER]SERVER LOOP: reply sent
1770:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1771:[SERVER]SERVER LOOP: reply sent
1772:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1773:[SERVER]SERVER LOOP: reply sent
1774:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1775:[SERVER]SERVER LOOP: reply sent
1776:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1777:[SERVER]SERVER LOOP: reply sent
1778:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1779:[SERVER]SERVER LOOP: reply sent
1780:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1781:[SERVER]SERVER LOOP: reply sent
1782:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1783:[SERVER]SERVER LOOP: reply sent
1784:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1785:[SERVER]SERVER LOOP: reply sent
1786:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1787:[SERVER]SERVER LOOP: reply sent
1788:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1789:[SERVER]SERVER LOOP: reply sent
1790:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1791:[SERVER]SERVER LOOP: reply sent
1792:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1793:[SERVER]SERVER LOOP: reply sent
1794:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1795:[SERVER]SERVER LOOP: reply sent
1796:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1797:[SERVER]SERVER LOOP: reply sent
1798:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1799:[SERVER]SERVER LOOP: reply sent
1800:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1801:[SERVER]SERVER LOOP: reply sent
1802:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1803:[SERVER]SERVER LOOP: reply sent
1804:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1805:[SERVER]SERVER LOOP: reply sent
1806:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1807:[SERVER]SERVER LOOP: reply sent
1808:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1809:[SERVER]SERVER LOOP: reply sent
1810:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1811:[SERVER]SERVER LOOP: reply sent
1812:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1813:[SERVER]SERVER LOOP: reply sent
1814:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1815:[SERVER]SERVER LOOP: reply sent
1816:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1817:[SERVER]SERVER LOOP: reply sent
1818:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1819:[SERVER]SERVER LOOP: reply sent
1820:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1821:[SERVER]SERVER LOOP: reply sent
1822:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1823:[SERVER]SERVER LOOP: reply sent
1824:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1825:[SERVER]SERVER LOOP: reply sent
1826:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1827:[SERVER]SERVER LOOP: reply sent
1828:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1829:[SERVER]SERVER LOOP: reply sent
1830:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1831:[SERVER]SERVER LOOP: reply sent
1832:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1833:[SERVER]SERVER LOOP: reply sent
1834:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1835:[SERVER]SERVER LOOP: reply sent
1836:[SERVER]SERVER LOOP: invoke getPC(pid=0)
1837:[SERVER]SERVER LOOP: reply sent
1838:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
1839:[SERVER]SERVER LOOP: reply sent
1840:[SERVER]SERVER LOOP: invoke queryState(pid=1)
1841:[SERVER]SERVER LOOP: reply sent
1842:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=1)
1843:[SERVER]SERVER LOOP: reply sent
1844:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
1845:[SERVER]SERVER LOOP: reply sent
1846:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
1847:[SERVER]SERVER LOOP: reply sent
1848:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
1849:[SERVER]SERVER LOOP: reply sent
1850:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
1851:[SERVER]SERVER LOOP: reply sent
1852:[callback]logMessage(obj=1,null,[2] Flushing data cache.
)  queue size=70
1853:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
1854:[SERVER]SERVER LOOP: reply sent
1855:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
1856:[SERVER]SERVER LOOP: reply sent
1857:[SERVER]SERVER LOOP: invoke getPC(pid=1)
1858:[SERVER]SERVER LOOP: reply sent
1859:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
1860:[SERVER]SERVER LOOP: reply sent
1861:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
1862:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
1863:[SERVER]SERVER LOOP: reply sent
1864:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1865:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1866:[SERVER]SERVER LOOP: reply sent
1867:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1868:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1869:[SERVER]SERVER LOOP: reply sent
1870:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1871:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1872:[SERVER]SERVER LOOP: reply sent
1873:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1874:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1875:[SERVER]SERVER LOOP: reply sent
1876:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1877:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1878:[SERVER]SERVER LOOP: reply sent
1879:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1880:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1881:[SERVER]SERVER LOOP: reply sent
1882:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1883:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1884:[SERVER]SERVER LOOP: reply sent
1885:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1886:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1887:[SERVER]SERVER LOOP: reply sent
1888:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1889:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1890:[SERVER]SERVER LOOP: reply sent
1891:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1892:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1893:[SERVER]SERVER LOOP: reply sent
1894:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1895:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1896:[SERVER]SERVER LOOP: reply sent
1897:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1898:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1899:[SERVER]SERVER LOOP: reply sent
1900:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1901:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1902:[SERVER]SERVER LOOP: reply sent
1903:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
1904:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
1905:[SERVER]SERVER LOOP: reply sent
1906:[SERVER]SERVER LOOP: invoke queryState(pid=2)
1907:[SERVER]SERVER LOOP: reply sent
1908:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=2)
1909:[SERVER]SERVER LOOP: reply sent
1910:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
1911:[SERVER]SERVER LOOP: reply sent
1912:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
1913:[SERVER]SERVER LOOP: reply sent
1914:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
1915:[SERVER]SERVER LOOP: reply sent
1916:[callback]logMessage(obj=1,null,[3] Flushing data cache.
)  queue size=39
1917:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
1918:[SERVER]SERVER LOOP: reply sent
1919:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
1920:[SERVER]SERVER LOOP: reply sent
1921:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
1922:[SERVER]SERVER LOOP: reply sent
1923:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
1924:[SERVER]SERVER LOOP: reply sent
1925:[SERVER]SERVER LOOP: invoke getPC(pid=2)
1926:[SERVER]SERVER LOOP: reply sent
1927:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
1928:[SERVER]SERVER LOOP: reply sent
1929:[SERVER]SERVER LOOP: invoke queryState(pid=3)
1930:[SERVER]SERVER LOOP: reply sent
1931:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=3)
1932:[SERVER]SERVER LOOP: reply sent
1933:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
1934:[SERVER]SERVER LOOP: reply sent
1935:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
1936:[SERVER]SERVER LOOP: reply sent
1937:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1938:[SERVER]SERVER LOOP: reply sent
1939:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1940:[SERVER]SERVER LOOP: reply sent
1941:[callback]logMessage(obj=1,null,[4] Flushing data cache.
)  queue size=0
1942:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1943:[SERVER]SERVER LOOP: reply sent
1944:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1945:[SERVER]SERVER LOOP: reply sent
1946:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1947:[SERVER]SERVER LOOP: reply sent
1948:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1949:[SERVER]SERVER LOOP: reply sent
1950:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
1951:[SERVER]SERVER LOOP: reply sent
1952:[SERVER]SERVER LOOP: invoke getPC(pid=3)
1953:[SERVER]SERVER LOOP: reply sent
1954:[SERVER]SERVER LOOP: invoke computeLocation(pid=3)
1955:[SERVER]SERVER LOOP: reply sent
1956:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
1957:[SERVER]SERVER LOOP: reply sent
1958:[SERVER]SERVER LOOP: invoke queryState(pid=0)
1959:[SERVER]SERVER LOOP: reply sent
1960:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
1961:[SERVER]SERVER LOOP: reply sent
1962:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
1963:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
1964:[SERVER]SERVER LOOP: reply sent
1965:[SERVER]SERVER LOOP: ascync reply to resume(pid=0)
1966:[SERVER]SERVER LOOP: invoke resume(pid=0)
1967:[SERVER]SERVER LOOP: reply sent
1968:[SERVER]SERVER LOOP: ascync reply to resume(pid=1)
1969:[SERVER]SERVER LOOP: invoke resume(pid=1)
1970:[SERVER]SERVER LOOP: reply sent
1971:[SERVER]SERVER LOOP: ascync reply to resume(pid=2)
1972:[SERVER]SERVER LOOP: invoke resume(pid=2)
1973:[SERVER]SERVER LOOP: reply sent
1974:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
1975:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=0
1976:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=1
1977:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=2
1978:[callback]setStatus(obj=3,25,Process running.)  queue size=3
1979:[callback]processResumed(obj=1,null)  queue size=4
1980:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=5
1981:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=6
1982:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=7
1983:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=8
1984:[callback]setStatus(obj=7,26,Process running.)  queue size=9
1985:[callback]processResumed(obj=5,null)  queue size=10
1986:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=11
1987:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=12
1988:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=13
1989:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=14
1990:[callback]setStatus(obj=11,27,Process running.)  queue size=15
1991:[callback]processResumed(obj=9,null)  queue size=16
1992:[SERVER]SERVER LOOP: ascync reply to resume(pid=3)
1993:[SERVER]SERVER LOOP: invoke resume(pid=3)
1994:[SERVER]SERVER LOOP: reply sent
1995:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=15
1996:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=16
1997:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=17
1998:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=18
1999:[callback]setStatus(obj=15,28,Process running.)  queue size=19
2000:[callback]processResumed(obj=13,null)  queue size=20
2001:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2002:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2003:[SERVER]SERVER LOOP: reply sent
2004:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2005:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2006:[SERVER]SERVER LOOP: reply sent
2007:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=1)
2008:[SERVER]SERVER LOOP: invoke setStackFrame(pid=1)
2009:[SERVER]SERVER LOOP: reply sent
2010:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=1)
2011:[SERVER]SERVER LOOP: invoke setStackFrame(pid=1)
2012:[SERVER]SERVER LOOP: reply sent
2013:[SERVER]SERVER LOOP: invoke getPC(pid=2)
2014:[SERVER]SERVER LOOP: reply sent
2015:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
2016:[SERVER]SERVER LOOP: reply sent
2017:[SERVER]SERVER LOOP: ascync reply to sendValueUpdate(pid=2)
2018:[SERVER]SERVER LOOP: invoke sendValueUpdate(pid=2)
2019:[SERVER]SERVER LOOP: reply sent
2020:[SERVER]SERVER LOOP: ascync reply to sendValueUpdate(pid=2)
2021:[SERVER]SERVER LOOP: invoke sendValueUpdate(pid=2)
2022:[SERVER]SERVER LOOP: reply sent
2023:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
2024:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
2025:[SERVER]SERVER LOOP: reply sent
2026:[callback]setStatus(obj=11,27,)  queue size=4
2027:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=5
2028:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=6
2029:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=7
2030:[callback]removeHighlights(obj=11,27,-1)  queue size=8
2031:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=9
2032:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=10
2033:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=11
2034:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=12
2035:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=13
2036:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=14
2037:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=15
2038:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=16
2039:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=17
2040:[callback]setBlanks(obj=11,27,9,13)  queue size=18
2041:[callback]refreshDisplay(obj=11,27)  queue size=19
2042:[callback]setScrollBar(obj=11,27,0,14,0,8,13)  queue size=20
2043:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=21
2044:[callback]setStatus(obj=11,27,)  queue size=22
2045:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=23
2046:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=24
2047:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=25
2048:[callback]removeHighlights(obj=11,27,-1)  queue size=26
2049:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=27
2050:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=28
2051:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=29
2052:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=30
2053:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=31
2054:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=32
2055:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=33
2056:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=34
2057:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=35
2058:[callback]setBlanks(obj=11,27,9,12)  queue size=36
2059:[callback]refreshDisplay(obj=11,27)  queue size=37
2060:[callback]setScrollBar(obj=11,27,0,13,0,8,12)  queue size=38
2061:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=39
2062:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
2063:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
2064:[SERVER]SERVER LOOP: reply sent
2065:[SERVER]SERVER LOOP: ascync reply to sendValueUpdate(pid=2)
2066:[SERVER]SERVER LOOP: invoke sendValueUpdate(pid=2)
2067:[SERVER]SERVER LOOP: reply sent
2068:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2069:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2070:[SERVER]SERVER LOOP: reply sent
2071:[callback]setStatus(obj=11,27,)  queue size=34
2072:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=35
2073:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=36
2074:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=37
2075:[callback]removeHighlights(obj=11,27,-1)  queue size=38
2076:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=39
2077:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=40
2078:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=41
2079:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=42
2080:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=43
2081:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=44
2082:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=45
2083:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=46
2084:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=47
2085:[callback]setBlanks(obj=11,27,9,13)  queue size=48
2086:[callback]refreshDisplay(obj=11,27)  queue size=49
2087:[callback]setScrollBar(obj=11,27,0,14,0,8,13)  queue size=50
2088:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=51
2089:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2090:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2091:[SERVER]SERVER LOOP: reply sent
2092:[callback]writeToStdout(obj=13,null,[B@1a1ff9)  queue size=0
2093:[callback]writeToStdout(obj=1,null,[B@12943ac)  queue size=0
2094:[SERVER]SERVER LOOP: invoke queryState(pid=0)
2095:[SERVER]SERVER LOOP: reply sent
2096:[SERVER]SERVER LOOP: invoke queryState(pid=1)
2097:[SERVER]SERVER LOOP: reply sent
2098:[SERVER]SERVER LOOP: invoke queryState(pid=2)
2099:[SERVER]SERVER LOOP: reply sent
2100:[SERVER]SERVER LOOP: invoke queryState(pid=3)
2101:[SERVER]SERVER LOOP: reply sent
2102:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2103:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2104:[SERVER]SERVER LOOP: reply sent
2105:[callback]writeToStdout(obj=9,null,[B@14ed577)  queue size=0
2106:[callback]writeToStdout(obj=1,null,[B@a09e41)  queue size=0
2107:[callback]writeToStdout(obj=13,null,[B@f5d030)  queue size=0
2108:[callback]writeToStdout(obj=1,null,[B@37165f)  queue size=0
2109:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
2110:[SERVER]SERVER LOOP: invoke stop(pid=0)
2111:[SERVER]SERVER LOOP: reply sent
2112:[SERVER]SERVER LOOP: ascync reply to stop(pid=1)
2113:[SERVER]SERVER LOOP: invoke stop(pid=1)
2114:[SERVER]SERVER LOOP: reply sent
2115:[SERVER]SERVER LOOP: ascync reply to stop(pid=2)
2116:[SERVER]SERVER LOOP: invoke stop(pid=2)
2117:[SERVER]SERVER LOOP: reply sent
2118:[SERVER]SERVER LOOP: ascync reply to stop(pid=3)
2119:[SERVER]SERVER LOOP: invoke stop(pid=3)
2120:[SERVER]SERVER LOOP: reply sent
2121:[callback]logMessage(obj=1,null,[1] Execution stopped.
)  queue size=0
2122:[callback]setStatus(obj=3,25,Execution stopped.)  queue size=1
2123:[callback]setStatus(obj=3,25,)  queue size=2
2124:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=3
2125:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=4
2126:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=5
2127:[callback]removeHighlights(obj=3,25,-1)  queue size=6
2128:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=7
2129:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=8
2130:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=9
2131:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=10
2132:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=11
2133:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=12
2134:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=13
2135:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=14
2136:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=15
2137:[callback]setBlanks(obj=3,25,9,14)  queue size=10
2138:[callback]refreshDisplay(obj=3,25)  queue size=11
2139:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=12
2140:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=13
2141:[callback]processStopped(obj=1,null,1)  queue size=14
2142:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=15
2143:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=16
2144:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=17
2145:[callback]removeHighlights(obj=3,25,-1)  queue size=18
2146:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=19
2147:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=20
2148:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=21
2149:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=22
2150:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=23
2151:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=24
2152:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=25
2153:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=26
2154:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=27
2155:[callback]setBlanks(obj=3,25,9,14)  queue size=28
2156:[callback]refreshDisplay(obj=3,25)  queue size=29
2157:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=30
2158:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=31
2159:[callback]updateViews(obj=3,)  queue size=32
2160:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=33
2161:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=34
2162:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=35
2163:[callback]removeHighlights(obj=3,25,-1)  queue size=36
2164:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=37
2165:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=38
2166:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=39
2167:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=40
2168:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=41
2169:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=42
2170:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=43
2171:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=44
2172:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=45
2173:[callback]setBlanks(obj=3,25,9,14)  queue size=46
2174:[callback]refreshDisplay(obj=3,25)  queue size=47
2175:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=48
2176:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=49
2177:[callback]updateViews(obj=3,)  queue size=50
2178:[callback]logMessage(obj=1,null,[2] Execution stopped.
)  queue size=51
2179:[callback]setStatus(obj=7,26,Execution stopped.)  queue size=52
2180:[callback]setStatus(obj=7,26,)  queue size=53
2181:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=54
2182:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=55
2183:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=56
2184:[callback]removeHighlights(obj=7,26,-1)  queue size=57
2185:[callback]setLine(obj=7,26,0,Image specifications: 8-bit gray scale -- scaled)  queue size=58
2186:[callback]setLine(obj=7,26,1,Image specification not yet valid -- specify a non-zero address)  queue size=59
2187:[callback]setLine(obj=7,26,2,  Address    : 0x0)  queue size=60
2188:[callback]setLine(obj=7,26,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=61
2189:[callback]setLine(obj=7,26,4,  Auto-update: on)  queue size=62
2190:[callback]setLine(obj=7,26,5, Timed-update: off)  queue size=63
2191:[callback]setLine(obj=7,26,6,    Scaling  : on)  queue size=64
2192:[callback]setLine(obj=7,26,7,  0 -- number of times image was read from memory.)  queue size=65
2193:[callback]setLine(obj=7,26,8,  0 -- number of times image changed and was updated to display)  queue size=66
2194:[callback]setBlanks(obj=7,26,9,14)  queue size=67
2195:[callback]refreshDisplay(obj=7,26)  queue size=68
2196:[callback]setScrollBar(obj=7,26,0,15,0,8,14)  queue size=69
2197:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=70
2198:[callback]processStopped(obj=5,null,1)  queue size=71
2199:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=72
2200:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=73
2201:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=74
2202:[callback]removeHighlights(obj=3,25,-1)  queue size=75
2203:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=76
2204:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=77
2205:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=78
2206:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=79
2207:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=80
2208:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=81
2209:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=82
2210:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=83
2211:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=84
2212:[callback]setBlanks(obj=3,25,9,14)  queue size=85
2213:[callback]refreshDisplay(obj=3,25)  queue size=86
2214:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=87
2215:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=88
2216:[callback]updateViews(obj=3,)  queue size=89
2217:[callback]logMessage(obj=1,null,[3] Execution stopped.
)  queue size=90
2218:[callback]setStatus(obj=11,27,Execution stopped.)  queue size=91
2219:[callback]setStatus(obj=11,27,)  queue size=92
2220:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=93
2221:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=94
2222:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=95
2223:[callback]removeHighlights(obj=11,27,-1)  queue size=96
2224:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=97
2225:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=98
2226:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=99
2227:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=100
2228:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=101
2229:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=102
2230:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=103
2231:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=104
2232:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=105
2233:[callback]setBlanks(obj=11,27,9,13)  queue size=106
2234:[callback]refreshDisplay(obj=11,27)  queue size=107
2235:[callback]setScrollBar(obj=11,27,0,14,0,8,13)  queue size=108
2236:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=109
2237:[callback]processStopped(obj=9,null,1)  queue size=110
2238:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=111
2239:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=112
2240:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=113
2241:[callback]removeHighlights(obj=3,25,-1)  queue size=114
2242:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=115
2243:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=116
2244:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=117
2245:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=118
2246:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=119
2247:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=120
2248:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=121
2249:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=122
2250:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=123
2251:[callback]setBlanks(obj=3,25,9,14)  queue size=124
2252:[callback]refreshDisplay(obj=3,25)  queue size=125
2253:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=126
2254:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=127
2255:[callback]updateViews(obj=3,)  queue size=128
2256:[callback]logMessage(obj=1,null,[4] Execution stopped.
)  queue size=129
2257:[callback]setStatus(obj=15,28,Execution stopped.)  queue size=130
2258:[callback]setStatus(obj=15,28,)  queue size=131
2259:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=132
2260:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=133
2261:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=134
2262:[callback]removeHighlights(obj=15,28,-1)  queue size=135
2263:[callback]setLine(obj=15,28,0,Image specifications: 8-bit gray scale -- scaled)  queue size=136
2264:[callback]setLine(obj=15,28,1,Image specification not yet valid -- specify a non-zero address)  queue size=137
2265:[callback]setLine(obj=15,28,2,  Address    : 0x0)  queue size=138
2266:[callback]setLine(obj=15,28,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=139
2267:[callback]setLine(obj=15,28,4,  Auto-update: on)  queue size=140
2268:[callback]setLine(obj=15,28,5, Timed-update: off)  queue size=141
2269:[callback]setLine(obj=15,28,6,    Scaling  : on)  queue size=142
2270:[callback]setLine(obj=15,28,7,  0 -- number of times image was read from memory.)  queue size=143
2271:[callback]setLine(obj=15,28,8,  0 -- number of times image changed and was updated to display)  queue size=144
2272:[callback]setBlanks(obj=15,28,9,14)  queue size=145
2273:[callback]refreshDisplay(obj=15,28)  queue size=146
2274:[callback]setScrollBar(obj=15,28,0,15,0,8,14)  queue size=147
2275:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=148
2276:[callback]processStopped(obj=13,null,1)  queue size=149
2277:[SERVER]SERVER LOOP: invoke queryState(pid=0)
2278:[SERVER]SERVER LOOP: reply sent
2279:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2280:[SERVER]SERVER LOOP: reply sent
2281:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2282:[SERVER]SERVER LOOP: reply sent
2283:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2284:[SERVER]SERVER LOOP: reply sent
2285:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2286:[SERVER]SERVER LOOP: reply sent
2287:[callback]logMessage(obj=1,null,[1] Flushing data cache.
)  queue size=132
2288:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2289:[SERVER]SERVER LOOP: reply sent
2290:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2291:[SERVER]SERVER LOOP: reply sent
2292:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2293:[SERVER]SERVER LOOP: reply sent
2294:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2295:[SERVER]SERVER LOOP: reply sent
2296:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2297:[SERVER]SERVER LOOP: reply sent
2298:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2299:[SERVER]SERVER LOOP: reply sent
2300:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2301:[SERVER]SERVER LOOP: reply sent
2302:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2303:[SERVER]SERVER LOOP: reply sent
2304:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2305:[SERVER]SERVER LOOP: reply sent
2306:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2307:[SERVER]SERVER LOOP: reply sent
2308:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2309:[SERVER]SERVER LOOP: reply sent
2310:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2311:[SERVER]SERVER LOOP: reply sent
2312:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2313:[SERVER]SERVER LOOP: reply sent
2314:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2315:[SERVER]SERVER LOOP: reply sent
2316:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2317:[SERVER]SERVER LOOP: reply sent
2318:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2319:[SERVER]SERVER LOOP: reply sent
2320:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2321:[SERVER]SERVER LOOP: reply sent
2322:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2323:[SERVER]SERVER LOOP: reply sent
2324:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2325:[SERVER]SERVER LOOP: reply sent
2326:[SERVER]SERVER LOOP: invoke queryState(pid=1)
2327:[SERVER]SERVER LOOP: reply sent
2328:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2329:[SERVER]SERVER LOOP: reply sent
2330:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2331:[SERVER]SERVER LOOP: reply sent
2332:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2333:[SERVER]SERVER LOOP: reply sent
2334:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2335:[SERVER]SERVER LOOP: reply sent
2336:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2337:[SERVER]SERVER LOOP: reply sent
2338:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2339:[SERVER]SERVER LOOP: reply sent
2340:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2341:[SERVER]SERVER LOOP: reply sent
2342:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2343:[SERVER]SERVER LOOP: reply sent
2344:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2345:[SERVER]SERVER LOOP: reply sent
2346:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2347:[SERVER]SERVER LOOP: reply sent
2348:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2349:[SERVER]SERVER LOOP: reply sent
2350:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2351:[SERVER]SERVER LOOP: reply sent
2352:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2353:[SERVER]SERVER LOOP: reply sent
2354:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2355:[SERVER]SERVER LOOP: reply sent
2356:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2357:[SERVER]SERVER LOOP: reply sent
2358:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2359:[SERVER]SERVER LOOP: reply sent
2360:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2361:[SERVER]SERVER LOOP: reply sent
2362:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2363:[SERVER]SERVER LOOP: reply sent
2364:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2365:[SERVER]SERVER LOOP: reply sent
2366:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2367:[SERVER]SERVER LOOP: reply sent
2368:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2369:[SERVER]SERVER LOOP: reply sent
2370:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2371:[SERVER]SERVER LOOP: reply sent
2372:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
2373:[SERVER]SERVER LOOP: reply sent
2374:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=1)
2375:[SERVER]SERVER LOOP: reply sent
2376:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2377:[SERVER]SERVER LOOP: reply sent
2378:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
2379:[SERVER]SERVER LOOP: reply sent
2380:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
2381:[SERVER]SERVER LOOP: reply sent
2382:[callback]logMessage(obj=1,null,[2] Flushing data cache.
)  queue size=51
2383:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
2384:[SERVER]SERVER LOOP: reply sent
2385:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
2386:[SERVER]SERVER LOOP: reply sent
2387:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2388:[SERVER]SERVER LOOP: reply sent
2389:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2390:[SERVER]SERVER LOOP: reply sent
2391:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2392:[SERVER]SERVER LOOP: reply sent
2393:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2394:[SERVER]SERVER LOOP: reply sent
2395:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2396:[SERVER]SERVER LOOP: reply sent
2397:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
2398:[SERVER]SERVER LOOP: reply sent
2399:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2400:[SERVER]SERVER LOOP: reply sent
2401:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
2402:[SERVER]SERVER LOOP: reply sent
2403:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2404:[SERVER]SERVER LOOP: reply sent
2405:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2406:[SERVER]SERVER LOOP: reply sent
2407:[SERVER]SERVER LOOP: invoke getPC(pid=1)
2408:[SERVER]SERVER LOOP: reply sent
2409:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
2410:[SERVER]SERVER LOOP: reply sent
2411:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2412:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2413:[SERVER]SERVER LOOP: reply sent
2414:[SERVER]SERVER LOOP: invoke queryState(pid=2)
2415:[SERVER]SERVER LOOP: reply sent
2416:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=2)
2417:[SERVER]SERVER LOOP: reply sent
2418:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2419:[SERVER]SERVER LOOP: reply sent
2420:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2421:[SERVER]SERVER LOOP: reply sent
2422:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2423:[SERVER]SERVER LOOP: reply sent
2424:[callback]logMessage(obj=1,null,[3] Flushing data cache.
)  queue size=38
2425:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2426:[SERVER]SERVER LOOP: reply sent
2427:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2428:[SERVER]SERVER LOOP: reply sent
2429:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2430:[SERVER]SERVER LOOP: reply sent
2431:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2432:[SERVER]SERVER LOOP: reply sent
2433:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2434:[SERVER]SERVER LOOP: reply sent
2435:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
2436:[SERVER]SERVER LOOP: reply sent
2437:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2438:[SERVER]SERVER LOOP: reply sent
2439:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2440:[SERVER]SERVER LOOP: reply sent
2441:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2442:[SERVER]SERVER LOOP: reply sent
2443:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2444:[SERVER]SERVER LOOP: reply sent
2445:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2446:[SERVER]SERVER LOOP: reply sent
2447:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2448:[SERVER]SERVER LOOP: reply sent
2449:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2450:[SERVER]SERVER LOOP: reply sent
2451:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2452:[SERVER]SERVER LOOP: reply sent
2453:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2454:[SERVER]SERVER LOOP: reply sent
2455:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
2456:[SERVER]SERVER LOOP: reply sent
2457:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2458:[SERVER]SERVER LOOP: reply sent
2459:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
2460:[SERVER]SERVER LOOP: reply sent
2461:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
2462:[SERVER]SERVER LOOP: reply sent
2463:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2464:[SERVER]SERVER LOOP: reply sent
2465:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2466:[SERVER]SERVER LOOP: reply sent
2467:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2468:[SERVER]SERVER LOOP: reply sent
2469:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2470:[SERVER]SERVER LOOP: reply sent
2471:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2472:[SERVER]SERVER LOOP: reply sent
2473:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2474:[SERVER]SERVER LOOP: reply sent
2475:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2476:[SERVER]SERVER LOOP: reply sent
2477:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2478:[SERVER]SERVER LOOP: reply sent
2479:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2480:[SERVER]SERVER LOOP: reply sent
2481:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2482:[SERVER]SERVER LOOP: reply sent
2483:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2484:[SERVER]SERVER LOOP: reply sent
2485:[SERVER]SERVER LOOP: invoke getPC(pid=0)
2486:[SERVER]SERVER LOOP: reply sent
2487:[SERVER]SERVER LOOP: invoke getPC(pid=2)
2488:[SERVER]SERVER LOOP: reply sent
2489:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
2490:[SERVER]SERVER LOOP: reply sent
2491:[SERVER]SERVER LOOP: invoke queryState(pid=3)
2492:[SERVER]SERVER LOOP: reply sent
2493:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=3)
2494:[SERVER]SERVER LOOP: reply sent
2495:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2496:[SERVER]SERVER LOOP: reply sent
2497:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2498:[SERVER]SERVER LOOP: reply sent
2499:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2500:[SERVER]SERVER LOOP: reply sent
2501:[callback]logMessage(obj=1,null,[4] Flushing data cache.
)  queue size=0
2502:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2503:[SERVER]SERVER LOOP: reply sent
2504:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2505:[SERVER]SERVER LOOP: reply sent
2506:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2507:[SERVER]SERVER LOOP: reply sent
2508:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2509:[SERVER]SERVER LOOP: reply sent
2510:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2511:[SERVER]SERVER LOOP: reply sent
2512:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2513:[SERVER]SERVER LOOP: reply sent
2514:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2515:[SERVER]SERVER LOOP: reply sent
2516:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2517:[SERVER]SERVER LOOP: reply sent
2518:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2519:[SERVER]SERVER LOOP: reply sent
2520:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2521:[SERVER]SERVER LOOP: reply sent
2522:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2523:[SERVER]SERVER LOOP: reply sent
2524:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2525:[SERVER]SERVER LOOP: reply sent
2526:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2527:[SERVER]SERVER LOOP: reply sent
2528:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2529:[SERVER]SERVER LOOP: reply sent
2530:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2531:[SERVER]SERVER LOOP: reply sent
2532:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2533:[SERVER]SERVER LOOP: reply sent
2534:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2535:[SERVER]SERVER LOOP: reply sent
2536:[SERVER]SERVER LOOP: invoke getPC(pid=3)
2537:[SERVER]SERVER LOOP: reply sent
2538:[SERVER]SERVER LOOP: invoke computeLocation(pid=3)
2539:[SERVER]SERVER LOOP: reply sent
2540:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2541:[SERVER]SERVER LOOP: reply sent
2542:[SERVER]SERVER LOOP: invoke queryState(pid=0)
2543:[SERVER]SERVER LOOP: reply sent
2544:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
2545:[SERVER]SERVER LOOP: reply sent
2546:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2547:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2548:[SERVER]SERVER LOOP: reply sent
2549:[SERVER]SERVER LOOP: ascync reply to resume(pid=0)
2550:[SERVER]SERVER LOOP: invoke resume(pid=0)
2551:[SERVER]SERVER LOOP: reply sent
2552:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
2553:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=0
2554:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=1
2555:[SERVER]SERVER LOOP: ascync reply to resume(pid=1)
2556:[SERVER]SERVER LOOP: invoke resume(pid=1)
2557:[SERVER]SERVER LOOP: reply sent
2558:[SERVER]SERVER LOOP: ascync reply to resume(pid=2)
2559:[SERVER]SERVER LOOP: invoke resume(pid=2)
2560:[SERVER]SERVER LOOP: reply sent
2561:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=0
2562:[callback]setStatus(obj=3,25,Process running.)  queue size=1
2563:[callback]processResumed(obj=1,null)  queue size=2
2564:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=3
2565:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=4
2566:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=5
2567:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=6
2568:[callback]setStatus(obj=7,26,Process running.)  queue size=7
2569:[callback]processResumed(obj=5,null)  queue size=8
2570:[SERVER]SERVER LOOP: ascync reply to resume(pid=3)
2571:[SERVER]SERVER LOOP: invoke resume(pid=3)
2572:[SERVER]SERVER LOOP: reply sent
2573:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=9
2574:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=10
2575:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=11
2576:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=12
2577:[callback]setStatus(obj=11,27,Process running.)  queue size=13
2578:[callback]processResumed(obj=9,null)  queue size=14
2579:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=15
2580:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=16
2581:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=17
2582:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=18
2583:[callback]setStatus(obj=15,28,Process running.)  queue size=19
2584:[callback]processResumed(obj=13,null)  queue size=20
2585:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2586:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2587:[SERVER]SERVER LOOP: reply sent
2588:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
2589:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
2590:[SERVER]SERVER LOOP: reply sent
2591:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=1)
2592:[SERVER]SERVER LOOP: invoke setStackFrame(pid=1)
2593:[SERVER]SERVER LOOP: reply sent
2594:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=1)
2595:[SERVER]SERVER LOOP: invoke setStackFrame(pid=1)
2596:[SERVER]SERVER LOOP: reply sent
2597:[SERVER]SERVER LOOP: invoke getPC(pid=2)
2598:[SERVER]SERVER LOOP: reply sent
2599:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
2600:[SERVER]SERVER LOOP: reply sent
2601:[SERVER]SERVER LOOP: ascync reply to sendValueUpdate(pid=2)
2602:[SERVER]SERVER LOOP: invoke sendValueUpdate(pid=2)
2603:[SERVER]SERVER LOOP: reply sent
2604:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
2605:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
2606:[SERVER]SERVER LOOP: reply sent
2607:[callback]setStatus(obj=11,27,)  queue size=1
2608:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=2
2609:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=3
2610:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=4
2611:[callback]removeHighlights(obj=11,27,-1)  queue size=5
2612:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=6
2613:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=7
2614:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=8
2615:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=9
2616:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=10
2617:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=11
2618:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=12
2619:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=13
2620:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=14
2621:[callback]setBlanks(obj=11,27,9,12)  queue size=15
2622:[callback]refreshDisplay(obj=11,27)  queue size=16
2623:[callback]setScrollBar(obj=11,27,0,13,0,8,12)  queue size=17
2624:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=18
2625:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
2626:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
2627:[SERVER]SERVER LOOP: reply sent
2628:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2629:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2630:[SERVER]SERVER LOOP: reply sent
2631:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2632:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2633:[SERVER]SERVER LOOP: reply sent
2634:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2635:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2636:[SERVER]SERVER LOOP: reply sent
2637:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2638:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2639:[SERVER]SERVER LOOP: reply sent
2640:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
2641:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
2642:[SERVER]SERVER LOOP: reply sent
2643:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
2644:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
2645:[SERVER]SERVER LOOP: reply sent
2646:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
2647:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
2648:[SERVER]SERVER LOOP: reply sent
2649:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
2650:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
2651:[SERVER]SERVER LOOP: reply sent
2652:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2653:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2654:[SERVER]SERVER LOOP: reply sent
2655:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2656:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2657:[SERVER]SERVER LOOP: reply sent
2658:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2659:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2660:[SERVER]SERVER LOOP: reply sent
2661:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2662:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2663:[SERVER]SERVER LOOP: reply sent
2664:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2665:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2666:[SERVER]SERVER LOOP: reply sent
2667:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
2668:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
2669:[SERVER]SERVER LOOP: reply sent
2670:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2671:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2672:[SERVER]SERVER LOOP: reply sent
2673:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2674:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2675:[SERVER]SERVER LOOP: reply sent
2676:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2677:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2678:[SERVER]SERVER LOOP: reply sent
2679:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2680:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2681:[SERVER]SERVER LOOP: reply sent
2682:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2683:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2684:[SERVER]SERVER LOOP: reply sent
2685:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2686:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2687:[SERVER]SERVER LOOP: reply sent
2688:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2689:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2690:[SERVER]SERVER LOOP: reply sent
2691:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2692:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2693:[SERVER]SERVER LOOP: reply sent
2694:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2695:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2696:[SERVER]SERVER LOOP: reply sent
2697:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2698:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2699:[SERVER]SERVER LOOP: reply sent
2700:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2701:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2702:[SERVER]SERVER LOOP: reply sent
2703:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2704:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2705:[SERVER]SERVER LOOP: reply sent
2706:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2707:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2708:[SERVER]SERVER LOOP: reply sent
2709:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2710:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2711:[SERVER]SERVER LOOP: reply sent
2712:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2713:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2714:[SERVER]SERVER LOOP: reply sent
2715:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2716:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2717:[SERVER]SERVER LOOP: reply sent
2718:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2719:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2720:[SERVER]SERVER LOOP: reply sent
2721:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2722:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2723:[SERVER]SERVER LOOP: reply sent
2724:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2725:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2726:[SERVER]SERVER LOOP: reply sent
2727:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2728:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2729:[SERVER]SERVER LOOP: reply sent
2730:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2731:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2732:[SERVER]SERVER LOOP: reply sent
2733:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
2734:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
2735:[SERVER]SERVER LOOP: reply sent
2736:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2737:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2738:[SERVER]SERVER LOOP: reply sent
2739:[callback]writeToStdout(obj=9,null,[B@ffa6eb)  queue size=0
2740:[callback]writeToStdout(obj=1,null,[B@27cd63)  queue size=0
2741:[callback]writeToStdout(obj=13,null,[B@11d3226)  queue size=0
2742:[SERVER]SERVER LOOP: ascync reply to stop(pid=3)
2743:[SERVER]SERVER LOOP: invoke stop(pid=3)
2744:[SERVER]SERVER LOOP: reply sent
2745:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
2746:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=1
2747:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=1
2748:[callback]removeHighlights(obj=3,25,-1)  queue size=2
2749:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=1
2750:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=2
2751:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=3
2752:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=4
2753:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=5
2754:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=6
2755:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=7
2756:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=8
2757:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=9
2758:[callback]setBlanks(obj=3,25,9,14)  queue size=10
2759:[callback]refreshDisplay(obj=3,25)  queue size=11
2760:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=12
2761:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=13
2762:[callback]updateViews(obj=3,)  queue size=14
2763:[callback]logMessage(obj=1,null,[4] Execution stopped.
)  queue size=15
2764:[callback]setStatus(obj=15,28,Execution stopped.)  queue size=16
2765:[callback]setStatus(obj=15,28,)  queue size=17
2766:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=18
2767:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=19
2768:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=20
2769:[callback]removeHighlights(obj=15,28,-1)  queue size=21
2770:[callback]setLine(obj=15,28,0,Image specifications: 8-bit gray scale -- scaled)  queue size=22
2771:[callback]setLine(obj=15,28,1,Image specification not yet valid -- specify a non-zero address)  queue size=23
2772:[callback]setLine(obj=15,28,2,  Address    : 0x0)  queue size=24
2773:[callback]setLine(obj=15,28,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=25
2774:[callback]setLine(obj=15,28,4,  Auto-update: on)  queue size=26
2775:[callback]setLine(obj=15,28,5, Timed-update: off)  queue size=27
2776:[callback]setLine(obj=15,28,6,    Scaling  : on)  queue size=28
2777:[callback]setLine(obj=15,28,7,  0 -- number of times image was read from memory.)  queue size=29
2778:[callback]setLine(obj=15,28,8,  0 -- number of times image changed and was updated to display)  queue size=30
2779:[callback]setBlanks(obj=15,28,9,14)  queue size=31
2780:[callback]refreshDisplay(obj=15,28)  queue size=32
2781:[callback]setScrollBar(obj=15,28,0,15,0,8,14)  queue size=33
2782:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=34
2783:[callback]processStopped(obj=13,null,1)  queue size=35
2784:[SERVER]SERVER LOOP: invoke queryState(pid=3)
2785:[SERVER]SERVER LOOP: reply sent
2786:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=3)
2787:[SERVER]SERVER LOOP: reply sent
2788:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2789:[SERVER]SERVER LOOP: reply sent
2790:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2791:[SERVER]SERVER LOOP: reply sent
2792:[callback]logMessage(obj=1,null,[4] Flushing data cache.
)  queue size=0
2793:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2794:[SERVER]SERVER LOOP: reply sent
2795:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=3)
2796:[SERVER]SERVER LOOP: reply sent
2797:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2798:[SERVER]SERVER LOOP: reply sent
2799:[SERVER]SERVER LOOP: invoke getFramePointer(pid=3)
2800:[SERVER]SERVER LOOP: reply sent
2801:[SERVER]SERVER LOOP: invoke getPC(pid=3)
2802:[SERVER]SERVER LOOP: reply sent
2803:[SERVER]SERVER LOOP: invoke computeLocation(pid=3)
2804:[SERVER]SERVER LOOP: reply sent
2805:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2806:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2807:[SERVER]SERVER LOOP: reply sent
2808:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
2809:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
2810:[SERVER]SERVER LOOP: reply sent
2811:[SERVER]SERVER LOOP: invoke getPC(pid=3)
2812:[SERVER]SERVER LOOP: reply sent
2813:[SERVER]SERVER LOOP: invoke computeLocation(pid=3)
2814:[SERVER]SERVER LOOP: reply sent
2815:[SERVER]SERVER LOOP: invoke getPC(pid=3)
2816:[SERVER]SERVER LOOP: reply sent
2817:[SERVER]SERVER LOOP: invoke computeLocation(pid=3)
2818:[SERVER]SERVER LOOP: reply sent
2819:[callback]writeToStdout(obj=1,null,[B@1c79dfc)  queue size=0
2820:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2821:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2822:[SERVER]SERVER LOOP: reply sent
2823:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2824:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2825:[SERVER]SERVER LOOP: reply sent
2826:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2827:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2828:[SERVER]SERVER LOOP: reply sent
2829:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2830:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2831:[SERVER]SERVER LOOP: reply sent
2832:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2833:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2834:[SERVER]SERVER LOOP: reply sent
2835:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2836:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2837:[SERVER]SERVER LOOP: reply sent
2838:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=3)
2839:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=3)
2840:[SERVER]SERVER LOOP: reply sent
2841:[callback]writeToStdout(obj=1,null,[B@553763)  queue size=0
2842:[callback]writeToStdout(obj=1,null,[B@a75737)  queue size=0
2843:[callback]writeToStdout(obj=1,null,[B@4f0853)  queue size=0
2844:[callback]writeToStdout(obj=1,null,[B@ab835a)  queue size=0
2845:[callback]writeToStdout(obj=1,null,[B@3cbb4b)  queue size=1
2846:[callback]writeToStdout(obj=1,null,[B@12c4768)  queue size=0
2847:[callback]writeToStdout(obj=1,null,[B@4298e)  queue size=0
2848:[callback]writeToStdout(obj=1,null,[B@1b8b3bb)  queue size=0
2849:[callback]writeToStdout(obj=1,null,[B@11ff451)  queue size=1
2850:[callback]writeToStdout(obj=1,null,[B@e0fcac)  queue size=0
2851:[callback]writeToStdout(obj=1,null,[B@ecb3f1)  queue size=0
2852:[callback]writeToStdout(obj=1,null,[B@19cc1b)  queue size=0
2853:[callback]writeToStdout(obj=1,null,[B@1a73d30)  queue size=0
2854:[callback]writeToStdout(obj=1,null,[B@a22671)  queue size=0
2855:[callback]writeToStdout(obj=1,null,[B@189f854)  queue size=0
2856:[callback]writeToStdout(obj=1,null,[B@10e7c9e)  queue size=0
2857:[callback]writeToStdout(obj=1,null,[B@178655)  queue size=0
2858:[callback]writeToStdout(obj=1,null,[B@746ad0)  queue size=0
2859:[callback]writeToStdout(obj=1,null,[B@1108727)  queue size=0
2860:[callback]writeToStdout(obj=1,null,[B@191e4c)  queue size=0
2861:[callback]writeToStdout(obj=1,null,[B@11415c8)  queue size=0
2862:[callback]writeToStdout(obj=1,null,[B@1a220e6)  queue size=0
2863:[callback]writeToStdout(obj=1,null,[B@11df164)  queue size=0
2864:[callback]writeToStdout(obj=1,null,[B@d306dd)  queue size=0
2865:[callback]writeToStdout(obj=1,null,[B@67c1a6)  queue size=0
2866:[callback]writeToStdout(obj=1,null,[B@1da87db)  queue size=0
2867:[callback]writeToStdout(obj=1,null,[B@d6c07)  queue size=0
2868:[callback]writeToStdout(obj=1,null,[B@12f41a5)  queue size=0
2869:[callback]writeToStdout(obj=1,null,[B@17ebe66)  queue size=0
2870:[callback]writeToStdout(obj=1,null,[B@6279d)  queue size=1
2871:[callback]writeToStdout(obj=1,null,[B@12dd76)  queue size=0
2872:[callback]writeToStdout(obj=1,null,[B@8990e4)  queue size=0
2873:[callback]writeToStdout(obj=1,null,[B@18782a7)  queue size=0
2874:[callback]writeToStdout(obj=1,null,[B@192d604)  queue size=0
2875:[callback]writeToStdout(obj=1,null,[B@120b2da)  queue size=0
2876:[callback]writeToStdout(obj=1,null,[B@1be4663)  queue size=0
2877:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2878:[SERVER]SERVER LOOP: reply sent
2879:[callback]writeToStdout(obj=1,null,[B@ff45de)  queue size=0
2880:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2881:[SERVER]SERVER LOOP: reply sent
2882:[callback]writeToStdout(obj=1,null,[B@14426a6)  queue size=0
2883:[callback]writeToStdout(obj=1,null,[B@1455cf0)  queue size=1
2884:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2885:[SERVER]SERVER LOOP: reply sent
2886:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
2887:[SERVER]SERVER LOOP: reply sent
2888:[callback]writeToStdout(obj=1,null,[B@d8a1a0)  queue size=2
2889:[callback]writeToStdout(obj=1,null,[B@5b38d7)  queue size=3
2890:[callback]writeToStdout(obj=1,null,[B@f0cb3c)  queue size=4
2891:[callback]writeToStdout(obj=1,null,[B@aefcbb)  queue size=5
2892:[callback]writeToStdout(obj=1,null,[B@528780)  queue size=6
2893:[callback]writeToStdout(obj=1,null,[B@3deff3)  queue size=7
2894:[callback]writeToStdout(obj=1,null,[B@543cb1)  queue size=8
2895:[callback]writeToStdout(obj=1,null,[B@5cc942)  queue size=9
2896:[callback]writeToStdout(obj=1,null,[B@1a13338)  queue size=10
2897:[callback]writeToStdout(obj=1,null,[B@29d294)  queue size=11
2898:[callback]writeToStdout(obj=1,null,[B@1c01ba9)  queue size=12
2899:[callback]writeToStdout(obj=1,null,[B@1582a7c)  queue size=13
2900:[callback]writeToStdout(obj=1,null,[B@14d556e)  queue size=14
2901:[callback]writeToStdout(obj=1,null,[B@23d275)  queue size=15
2902:[callback]writeToStdout(obj=1,null,[B@1ce15f6)  queue size=16
2903:[callback]writeToStdout(obj=1,null,[B@103fcaa)  queue size=17
2904:[callback]writeToStdout(obj=1,null,[B@c135d6)  queue size=18
2905:[callback]writeToStdout(obj=1,null,[B@b5ad68)  queue size=0
2906:[callback]writeToStdout(obj=1,null,[B@18baf36)  queue size=0
2907:[callback]writeToStdout(obj=1,null,[B@19c4091)  queue size=0
2908:[callback]writeToStdout(obj=9,null,[B@153113d)  queue size=0
2909:[callback]writeToStdout(obj=1,null,[B@90fa05)  queue size=0
2910:[callback]writeToStdout(obj=1,null,[B@e7d53)  queue size=0
2911:[callback]writeToStdout(obj=1,null,[B@145fe3b)  queue size=0
2912:[callback]writeToStdout(obj=1,null,[B@35eed0)  queue size=0
2913:[callback]writeToStdout(obj=1,null,[B@d19cdf)  queue size=0
2914:[callback]writeToStdout(obj=1,null,[B@19214b1)  queue size=0
2915:[callback]writeToStdout(obj=1,null,[B@18c8aea)  queue size=0
2916:[callback]writeToStdout(obj=1,null,[B@1f42731)  queue size=0
2917:[callback]writeToStdout(obj=1,null,[B@39060b)  queue size=0
2918:[callback]writeToStdout(obj=1,null,[B@1bbd3e2)  queue size=0
2919:[callback]writeToStdout(obj=1,null,[B@12f9bcd)  queue size=0
2920:[callback]writeToStdout(obj=1,null,[B@9db992)  queue size=0
2921:[callback]writeToStdout(obj=1,null,[B@1022de4)  queue size=0
2922:[callback]writeToStdout(obj=1,null,[B@130998)  queue size=0
2923:[callback]writeToStdout(obj=1,null,[B@1dae160)  queue size=0
2924:[callback]writeToStdout(obj=1,null,[B@102679a)  queue size=0
2925:[callback]writeToStdout(obj=1,null,[B@dfbb43)  queue size=0
2926:[callback]writeToStdout(obj=1,null,[B@7f3b8a)  queue size=0
2927:[callback]writeToStdout(obj=1,null,[B@11e1bbf)  queue size=0
2928:[callback]writeToStdout(obj=1,null,[B@1afd9cc)  queue size=0
2929:[callback]writeToStdout(obj=1,null,[B@3e926)  queue size=1
2930:[callback]writeToStdout(obj=1,null,[B@bfd66a)  queue size=0
2931:[callback]writeToStdout(obj=1,null,[B@95f290)  queue size=0
2932:[callback]writeToStdout(obj=1,null,[B@67fe80)  queue size=0
2933:[callback]writeToStdout(obj=1,null,[B@175b7f9)  queue size=0
2934:[callback]writeToStdout(obj=1,null,[B@181497d)  queue size=0
2935:[callback]writeToStdout(obj=1,null,[B@ffeef1)  queue size=0
2936:[callback]writeToStdout(obj=1,null,[B@a010ba)  queue size=0
2937:[callback]writeToStdout(obj=1,null,[B@aa3518)  queue size=0
2938:[callback]writeToStdout(obj=1,null,[B@83d8be)  queue size=0
2939:[callback]writeToStdout(obj=1,null,[B@ae1cf)  queue size=0
2940:[callback]writeToStdout(obj=1,null,[B@6ef7ba)  queue size=0
2941:[callback]writeToStdout(obj=1,null,[B@149f041)  queue size=0
2942:[callback]writeToStdout(obj=1,null,[B@13c53a8)  queue size=0
2943:[callback]writeToStdout(obj=1,null,[B@1984a9d)  queue size=0
2944:[callback]writeToStdout(obj=1,null,[B@14aa2db)  queue size=0
2945:[callback]writeToStdout(obj=1,null,[B@109da93)  queue size=0
2946:[callback]writeToStdout(obj=1,null,[B@1ed1dbe)  queue size=0
2947:[callback]writeToStdout(obj=1,null,[B@3bc1a1)  queue size=0
2948:[callback]writeToStdout(obj=1,null,[B@12549c4)  queue size=0
2949:[callback]writeToStdout(obj=1,null,[B@10df4e2)  queue size=0
2950:[callback]writeToStdout(obj=1,null,[B@1485542)  queue size=0
2951:[callback]writeToStdout(obj=1,null,[B@1d59d3c)  queue size=0
2952:[callback]writeToStdout(obj=1,null,[B@145e5a6)  queue size=0
2953:[callback]writeToStdout(obj=1,null,[B@1e80761)  queue size=0
2954:[callback]writeToStdout(obj=1,null,[B@3c9314)  queue size=0
2955:[callback]writeToStdout(obj=1,null,[B@dc3b82)  queue size=0
2956:[callback]writeToStdout(obj=1,null,[B@c7057c)  queue size=0
2957:[callback]writeToStdout(obj=1,null,[B@391da0)  queue size=1
2958:[callback]writeToStdout(obj=1,null,[B@1c7f37d)  queue size=0
2959:[callback]writeToStdout(obj=1,null,[B@42a6eb)  queue size=0
2960:[callback]writeToStdout(obj=1,null,[B@1dcc4cd)  queue size=0
2961:[callback]writeToStdout(obj=1,null,[B@fc8e75)  queue size=0
2962:[callback]writeToStdout(obj=1,null,[B@ecd92c)  queue size=0
2963:[callback]writeToStdout(obj=1,null,[B@1a5e68a)  queue size=0
2964:[callback]writeToStdout(obj=1,null,[B@c26ede)  queue size=0
2965:[callback]writeToStdout(obj=1,null,[B@fccada)  queue size=0
2966:[callback]writeToStdout(obj=1,null,[B@69ed4a)  queue size=0
2967:[callback]writeToStdout(obj=1,null,[B@59cbda)  queue size=0
2968:[callback]writeToStdout(obj=1,null,[B@1567e6c)  queue size=0
2969:[callback]writeToStdout(obj=1,null,[B@18600d6)  queue size=0
2970:[callback]writeToStdout(obj=1,null,[B@a0e990)  queue size=0
2971:[callback]writeToStdout(obj=1,null,[B@4600c0)  queue size=0
2972:[callback]writeToStdout(obj=1,null,[B@1db4492)  queue size=0
2973:[callback]writeToStdout(obj=1,null,[B@72d873)  queue size=1
2974:[callback]writeToStdout(obj=1,null,[B@1e09eab)  queue size=0
2975:[callback]writeToStdout(obj=1,null,[B@1d1082f)  queue size=0
2976:[callback]writeToStdout(obj=1,null,[B@705d28)  queue size=0
2977:[callback]writeToStdout(obj=1,null,[B@f429d7)  queue size=1
2978:[callback]writeToStdout(obj=1,null,[B@1e708b2)  queue size=0
2979:[callback]writeToStdout(obj=1,null,[B@ec115b)  queue size=1
2980:[callback]writeToStdout(obj=1,null,[B@6798eb)  queue size=0
2981:[callback]writeToStdout(obj=1,null,[B@168989e)  queue size=0
2982:[callback]writeToStdout(obj=1,null,[B@1fbc355)  queue size=0
2983:[callback]writeToStdout(obj=1,null,[B@1d532ae)  queue size=0
2984:[callback]writeToStdout(obj=1,null,[B@1f2428d)  queue size=0
2985:[callback]writeToStdout(obj=1,null,[B@1ef3d1b)  queue size=1
2986:[callback]writeToStdout(obj=1,null,[B@194df96)  queue size=0
2987:[callback]writeToStdout(obj=1,null,[B@e2fbeb)  queue size=0
2988:[callback]writeToStdout(obj=1,null,[B@932fe)  queue size=1
2989:[callback]writeToStdout(obj=1,null,[B@1f2edd2)  queue size=0
2990:[callback]writeToStdout(obj=1,null,[B@1dbb27d)  queue size=0
2991:[callback]writeToStdout(obj=1,null,[B@a33ce2)  queue size=0
2992:[callback]writeToStdout(obj=1,null,[B@93c4f1)  queue size=0
2993:[callback]writeToStdout(obj=1,null,[B@166c114)  queue size=0
2994:[callback]writeToStdout(obj=1,null,[B@10e1513)  queue size=0
2995:[callback]writeToStdout(obj=1,null,[B@189a773)  queue size=0
2996:[callback]writeToStdout(obj=1,null,[B@509df8)  queue size=0
2997:[callback]writeToStdout(obj=1,null,[B@b31a7c)  queue size=0
2998:[callback]writeToStdout(obj=1,null,[B@8fcc7b)  queue size=0
2999:[callback]writeToStdout(obj=1,null,[B@b9b618)  queue size=0
3000:[callback]writeToStdout(obj=1,null,[B@61ec49)  queue size=0
3001:[callback]writeToStdout(obj=1,null,[B@dfc362)  queue size=0
3002:[callback]writeToStdout(obj=1,null,[B@948069)  queue size=0
3003:[callback]writeToStdout(obj=1,null,[B@17a7706)  queue size=0
3004:[callback]writeToStdout(obj=1,null,[B@11c55bb)  queue size=0
3005:[callback]writeToStdout(obj=1,null,[B@1406eb6)  queue size=0
3006:[callback]writeToStdout(obj=1,null,[B@1248f2b)  queue size=0
3007:[callback]writeToStdout(obj=1,null,[B@1336006)  queue size=0
3008:[callback]writeToStdout(obj=1,null,[B@1e536d6)  queue size=0
3009:[callback]writeToStdout(obj=1,null,[B@1735b26)  queue size=0
3010:[callback]writeToStdout(obj=1,null,[B@651e95)  queue size=0
3011:[callback]writeToStdout(obj=1,null,[B@baf589)  queue size=0
3012:[callback]writeToStdout(obj=1,null,[B@4e21db)  queue size=0
3013:[callback]writeToStdout(obj=1,null,[B@190b72c)  queue size=0
3014:[callback]writeToStdout(obj=1,null,[B@1e9d9b1)  queue size=0
3015:[callback]writeToStdout(obj=1,null,[B@1d31859)  queue size=0
3016:[callback]writeToStdout(obj=1,null,[B@1e3a0ec)  queue size=0
3017:[callback]writeToStdout(obj=1,null,[B@15a07bf)  queue size=0
3018:[callback]writeToStdout(obj=1,null,[B@1b2b131)  queue size=0
3019:[callback]writeToStdout(obj=1,null,[B@8f3d27)  queue size=0
3020:[callback]writeToStdout(obj=1,null,[B@1f7cdc7)  queue size=1
3021:[callback]writeToStdout(obj=1,null,[B@1e6f0ef)  queue size=0
3022:[callback]writeToStdout(obj=1,null,[B@d402dd)  queue size=0
3023:[callback]writeToStdout(obj=1,null,[B@1083717)  queue size=0
3024:[callback]writeToStdout(obj=1,null,[B@58cca9)  queue size=0
3025:[callback]writeToStdout(obj=1,null,[B@1e4905a)  queue size=0
3026:[callback]writeToStdout(obj=1,null,[B@c12474)  queue size=0
3027:[callback]writeToStdout(obj=1,null,[B@407166)  queue size=0
3028:[callback]writeToStdout(obj=1,null,[B@d510e8)  queue size=1
3029:[callback]writeToStdout(obj=1,null,[B@490342)  queue size=0
3030:[callback]writeToStdout(obj=1,null,[B@1751a9e)  queue size=0
3031:[callback]writeToStdout(obj=1,null,[B@126ba64)  queue size=0
3032:[callback]writeToStdout(obj=1,null,[B@1971eb3)  queue size=0
3033:[callback]writeToStdout(obj=1,null,[B@60b407)  queue size=0
3034:[callback]writeToStdout(obj=1,null,[B@cb754f)  queue size=0
3035:[callback]writeToStdout(obj=1,null,[B@182a033)  queue size=0
3036:[callback]writeToStdout(obj=1,null,[B@e391c4)  queue size=1
3037:[callback]writeToStdout(obj=1,null,[B@76f2e8)  queue size=0
3038:[callback]writeToStdout(obj=1,null,[B@1458dcb)  queue size=0
3039:[callback]writeToStdout(obj=1,null,[B@1603522)  queue size=0
3040:[callback]writeToStdout(obj=1,null,[B@1408a75)  queue size=0
3041:[callback]writeToStdout(obj=1,null,[B@423d4f)  queue size=1
3042:[callback]writeToStdout(obj=1,null,[B@c713d2)  queue size=0
3043:[callback]writeToStdout(obj=1,null,[B@1e6696c)  queue size=0
3044:[callback]writeToStdout(obj=1,null,[B@135133)  queue size=0
3045:[callback]writeToStdout(obj=1,null,[B@381d92)  queue size=0
3046:[callback]writeToStdout(obj=1,null,[B@1d8e9e)  queue size=0
3047:[callback]writeToStdout(obj=1,null,[B@7e5130)  queue size=0
3048:[callback]writeToStdout(obj=1,null,[B@1042fcc)  queue size=0
3049:[callback]writeToStdout(obj=1,null,[B@1de0c09)  queue size=0
3050:[callback]writeToStdout(obj=1,null,[B@e85825)  queue size=0
3051:[callback]writeToStdout(obj=1,null,[B@1f2f70a)  queue size=0
3052:[callback]writeToStdout(obj=1,null,[B@38d460)  queue size=0
3053:[callback]writeToStdout(obj=1,null,[B@feecca)  queue size=0
3054:[callback]writeToStdout(obj=1,null,[B@6bd9e0)  queue size=0
3055:[callback]writeToStdout(obj=1,null,[B@ad339b)  queue size=0
3056:[callback]writeToStdout(obj=1,null,[B@11710be)  queue size=0
3057:[callback]writeToStdout(obj=1,null,[B@14c4d61)  queue size=0
3058:[callback]writeToStdout(obj=1,null,[B@6c5356)  queue size=0
3059:[callback]writeToStdout(obj=1,null,[B@1d349e2)  queue size=0
3060:[callback]writeToStdout(obj=1,null,[B@97d3f0)  queue size=0
3061:[callback]writeToStdout(obj=1,null,[B@1db6942)  queue size=0
3062:[callback]writeToStdout(obj=1,null,[B@1db9f45)  queue size=0
3063:[callback]writeToStdout(obj=1,null,[B@1b59919)  queue size=0
3064:[callback]writeToStdout(obj=1,null,[B@1566a6c)  queue size=0
3065:[callback]writeToStdout(obj=1,null,[B@650646)  queue size=0
3066:[callback]writeToStdout(obj=1,null,[B@7efa96)  queue size=0
3067:[callback]writeToStdout(obj=1,null,[B@75c78d)  queue size=0
3068:[callback]writeToStdout(obj=1,null,[B@800aa1)  queue size=0
3069:[callback]writeToStdout(obj=1,null,[B@39da8a)  queue size=0
3070:[callback]writeToStdout(obj=1,null,[B@3acc67)  queue size=0
3071:[callback]writeToStdout(obj=1,null,[B@bd4e3c)  queue size=0
3072:[callback]writeToStdout(obj=1,null,[B@5b78cf)  queue size=1
3073:[callback]writeToStdout(obj=1,null,[B@1588325)  queue size=1
3074:[callback]writeToStdout(obj=1,null,[B@a2a38)  queue size=0
3075:[callback]writeToStdout(obj=1,null,[B@159ea8e)  queue size=1
3076:[callback]writeToStdout(obj=1,null,[B@3650ed)  queue size=0
3077:[callback]writeToStdout(obj=1,null,[B@1fb050c)  queue size=0
3078:[callback]writeToStdout(obj=1,null,[B@1088a1b)  queue size=0
3079:[callback]writeToStdout(obj=1,null,[B@1a32ea4)  queue size=0
3080:[callback]writeToStdout(obj=1,null,[B@4b12d9)  queue size=0
3081:[callback]writeToStdout(obj=1,null,[B@c28cb7)  queue size=0
3082:[callback]writeToStdout(obj=1,null,[B@a45435)  queue size=0
3083:[callback]writeToStdout(obj=1,null,[B@946d22)  queue size=0
3084:[callback]writeToStdout(obj=1,null,[B@8905bd)  queue size=0
3085:[callback]writeToStdout(obj=1,null,[B@1d7fc31)  queue size=0
3086:[callback]writeToStdout(obj=1,null,[B@ee20fe)  queue size=0
3087:[callback]writeToStdout(obj=1,null,[B@1b83048)  queue size=0
3088:[callback]writeToStdout(obj=1,null,[B@169dd64)  queue size=0
3089:[callback]writeToStdout(obj=1,null,[B@145f5e3)  queue size=1
3090:[callback]writeToStdout(obj=1,null,[B@122d9c)  queue size=0
3091:[callback]writeToStdout(obj=1,null,[B@170984c)  queue size=1
3092:[callback]writeToStdout(obj=1,null,[B@11ed166)  queue size=0
3093:[callback]writeToStdout(obj=1,null,[B@45aa2c)  queue size=0
3094:[callback]writeToStdout(obj=1,null,[B@1a734ff)  queue size=1
3095:[callback]writeToStdout(obj=1,null,[B@886ad0)  queue size=0
3096:[callback]writeToStdout(obj=1,null,[B@1cab18)  queue size=0
3097:[callback]writeToStdout(obj=1,null,[B@24e801)  queue size=0
3098:[callback]writeToStdout(obj=1,null,[B@fba502)  queue size=0
3099:[callback]writeToStdout(obj=1,null,[B@10e4fd7)  queue size=0
3100:[callback]writeToStdout(obj=1,null,[B@9bc984)  queue size=1
3101:[callback]writeToStdout(obj=1,null,[B@1cb2795)  queue size=0
3102:[callback]writeToStdout(obj=1,null,[B@93bca2)  queue size=1
3103:[callback]writeToStdout(obj=1,null,[B@1455d1c)  queue size=0
3104:[callback]writeToStdout(obj=1,null,[B@e3ffdf)  queue size=0
3105:[callback]writeToStdout(obj=1,null,[B@b3a5a0)  queue size=0
3106:[callback]writeToStdout(obj=1,null,[B@3ec561)  queue size=0
3107:[callback]writeToStdout(obj=1,null,[B@1107c05)  queue size=0
3108:[callback]writeToStdout(obj=1,null,[B@13e6226)  queue size=0
3109:[callback]writeToStdout(obj=1,null,[B@9dca26)  queue size=0
3110:[callback]writeToStdout(obj=1,null,[B@1429cb2)  queue size=0
3111:[callback]writeToStdout(obj=1,null,[B@3da850)  queue size=0
3112:[callback]writeToStdout(obj=1,null,[B@1f51e5c)  queue size=0
3113:[callback]writeToStdout(obj=1,null,[B@19c6163)  queue size=0
3114:[callback]writeToStdout(obj=1,null,[B@1bdbfec)  queue size=0
3115:[callback]writeToStdout(obj=1,null,[B@834cfb)  queue size=0
3116:[callback]writeToStdout(obj=1,null,[B@330fb9)  queue size=0
3117:[callback]writeToStdout(obj=1,null,[B@4d5575)  queue size=0
3118:[callback]writeToStdout(obj=1,null,[B@1257687)  queue size=0
3119:[callback]writeToStdout(obj=1,null,[B@88d319)  queue size=0
3120:[callback]writeToStdout(obj=1,null,[B@db38a4)  queue size=0
3121:[callback]writeToStdout(obj=1,null,[B@63a1ae)  queue size=0
3122:[callback]writeToStdout(obj=1,null,[B@10bc995)  queue size=0
3123:[callback]writeToStdout(obj=1,null,[B@df8b14)  queue size=1
3124:[callback]writeToStdout(obj=1,null,[B@23d08b)  queue size=0
3125:[callback]writeToStdout(obj=1,null,[B@1508f31)  queue size=0
3126:[callback]writeToStdout(obj=1,null,[B@1e8fa70)  queue size=0
3127:[callback]writeToStdout(obj=1,null,[B@91f0de)  queue size=0
3128:[callback]writeToStdout(obj=1,null,[B@15c929a)  queue size=0
3129:[callback]writeToStdout(obj=1,null,[B@9cd8db)  queue size=1
3130:[callback]writeToStdout(obj=1,null,[B@1612190)  queue size=0
3131:[callback]writeToStdout(obj=1,null,[B@1e29b99)  queue size=0
3132:[callback]writeToStdout(obj=1,null,[B@5585dc)  queue size=1
3133:[callback]writeToStdout(obj=1,null,[B@c736e4)  queue size=0
3134:[callback]writeToStdout(obj=1,null,[B@e4e358)  queue size=0
3135:[callback]writeToStdout(obj=1,null,[B@109dc35)  queue size=0
3136:[callback]writeToStdout(obj=1,null,[B@58213c)  queue size=0
3137:[callback]writeToStdout(obj=1,null,[B@1ee04fd)  queue size=0
3138:[callback]writeToStdout(obj=1,null,[B@1898115)  queue size=0
3139:[callback]writeToStdout(obj=1,null,[B@79b177)  queue size=0
3140:[callback]writeToStdout(obj=1,null,[B@1723c7f)  queue size=0
3141:[callback]writeToStdout(obj=1,null,[B@e1eae7)  queue size=0
3142:[callback]writeToStdout(obj=1,null,[B@523be)  queue size=0
3143:[callback]writeToStdout(obj=1,null,[B@16dba0a)  queue size=0
3144:[callback]writeToStdout(obj=1,null,[B@d0f59e)  queue size=0
3145:[callback]writeToStdout(obj=1,null,[B@ad5fab)  queue size=0
3146:[callback]writeToStdout(obj=1,null,[B@63f09e)  queue size=0
3147:[callback]writeToStdout(obj=1,null,[B@14a55e5)  queue size=0
3148:[callback]writeToStdout(obj=1,null,[B@14d581b)  queue size=0
3149:[callback]writeToStdout(obj=1,null,[B@d36ff3)  queue size=0
3150:[callback]writeToStdout(obj=1,null,[B@15af049)  queue size=0
3151:[callback]writeToStdout(obj=1,null,[B@1555185)  queue size=0
3152:[callback]writeToStdout(obj=1,null,[B@5b28c9)  queue size=0
3153:[callback]writeToStdout(obj=1,null,[B@1c19919)  queue size=0
3154:[callback]writeToStdout(obj=1,null,[B@12a416a)  queue size=1
3155:[callback]writeToStdout(obj=1,null,[B@12cb585)  queue size=0
3156:[callback]writeToStdout(obj=1,null,[B@413fc6)  queue size=0
3157:[callback]writeToStdout(obj=1,null,[B@1c220eb)  queue size=0
3158:[callback]writeToStdout(obj=1,null,[B@1ff5c98)  queue size=0
3159:[callback]writeToStdout(obj=1,null,[B@183272)  queue size=0
3160:[callback]writeToStdout(obj=1,null,[B@97e3a5)  queue size=0
3161:[callback]writeToStdout(obj=1,null,[B@1e2a069)  queue size=0
3162:[callback]writeToStdout(obj=1,null,[B@191777e)  queue size=0
3163:[callback]writeToStdout(obj=1,null,[B@13c2d7f)  queue size=0
3164:[callback]writeToStdout(obj=1,null,[B@1cefde4)  queue size=0
3165:[callback]writeToStdout(obj=1,null,[B@7ec028)  queue size=0
3166:[callback]writeToStdout(obj=1,null,[B@179b7b0)  queue size=0
3167:[callback]writeToStdout(obj=1,null,[B@ab1b4)  queue size=0
3168:[callback]writeToStdout(obj=1,null,[B@18c458)  queue size=0
3169:[callback]writeToStdout(obj=1,null,[B@2a2cc)  queue size=0
3170:[callback]writeToStdout(obj=1,null,[B@10e18ba)  queue size=0
3171:[callback]writeToStdout(obj=1,null,[B@7981d5)  queue size=1
3172:[callback]writeToStdout(obj=1,null,[B@13acc52)  queue size=0
3173:[callback]writeToStdout(obj=1,null,[B@13c33b7)  queue size=0
3174:[callback]writeToStdout(obj=1,null,[B@c5f468)  queue size=0
3175:[callback]writeToStdout(obj=1,null,[B@1d1c3cd)  queue size=0
3176:[callback]writeToStdout(obj=1,null,[B@162d950)  queue size=0
3177:[callback]writeToStdout(obj=1,null,[B@a937cd)  queue size=0
3178:[callback]writeToStdout(obj=1,null,[B@ec8784)  queue size=0
3179:[callback]writeToStdout(obj=1,null,[B@b52a28)  queue size=0
3180:[callback]writeToStdout(obj=1,null,[B@1e2c841)  queue size=0
3181:[callback]writeToStdout(obj=1,null,[B@1c958af)  queue size=0
3182:[callback]writeToStdout(obj=1,null,[B@1dd7736)  queue size=0
3183:[callback]writeToStdout(obj=1,null,[B@bd93cd)  queue size=0
3184:[callback]writeToStdout(obj=1,null,[B@3299f6)  queue size=0
3185:[callback]writeToStdout(obj=1,null,[B@19fc25)  queue size=0
3186:[callback]writeToStdout(obj=1,null,[B@1f8f8c8)  queue size=0
3187:[callback]writeToStdout(obj=1,null,[B@952905)  queue size=0
3188:[callback]writeToStdout(obj=1,null,[B@b83be0)  queue size=1
3189:[callback]writeToStdout(obj=1,null,[B@1631573)  queue size=0
3190:[callback]writeToStdout(obj=1,null,[B@1533c8)  queue size=0
3191:[callback]writeToStdout(obj=1,null,[B@1faa614)  queue size=0
3192:[callback]writeToStdout(obj=1,null,[B@ad7d80)  queue size=0
3193:[callback]writeToStdout(obj=1,null,[B@a6d35)  queue size=0
3194:[callback]writeToStdout(obj=1,null,[B@1b0889a)  queue size=0
3195:[callback]writeToStdout(obj=1,null,[B@d844a9)  queue size=0
3196:[callback]writeToStdout(obj=1,null,[B@83e5f1)  queue size=0
3197:[callback]writeToStdout(obj=1,null,[B@16d64c5)  queue size=0
3198:[callback]writeToStdout(obj=1,null,[B@f2c96c)  queue size=0
3199:[callback]writeToStdout(obj=1,null,[B@185fe0c)  queue size=0
3200:[callback]writeToStdout(obj=1,null,[B@1e9f5cc)  queue size=0
3201:[callback]writeToStdout(obj=1,null,[B@1082823)  queue size=0
3202:[callback]writeToStdout(obj=1,null,[B@831a91)  queue size=0
3203:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
3204:[SERVER]SERVER LOOP: invoke stop(pid=0)
3205:[SERVER]SERVER LOOP: reply sent
3206:[callback]logMessage(obj=1,null,[1] Execution stopped.
)  queue size=0
3207:[callback]setStatus(obj=3,25,Execution stopped.)  queue size=1
3208:[callback]setStatus(obj=3,25,)  queue size=2
3209:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=3
3210:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=4
3211:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=5
3212:[callback]removeHighlights(obj=3,25,-1)  queue size=6
3213:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=7
3214:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=8
3215:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=9
3216:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=10
3217:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=11
3218:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=12
3219:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=13
3220:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=14
3221:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=15
3222:[callback]setBlanks(obj=3,25,9,14)  queue size=16
3223:[callback]refreshDisplay(obj=3,25)  queue size=17
3224:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=18
3225:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=19
3226:[callback]processStopped(obj=1,null,1)  queue size=20
3227:[SERVER]SERVER LOOP: invoke queryState(pid=0)
3228:[SERVER]SERVER LOOP: reply sent
3229:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3230:[SERVER]SERVER LOOP: reply sent
3231:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3232:[SERVER]SERVER LOOP: reply sent
3233:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3234:[SERVER]SERVER LOOP: reply sent
3235:[callback]logMessage(obj=1,null,[1] Flushing data cache.
)  queue size=0
3236:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3237:[SERVER]SERVER LOOP: reply sent
3238:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3239:[SERVER]SERVER LOOP: reply sent
3240:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3241:[SERVER]SERVER LOOP: reply sent
3242:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3243:[SERVER]SERVER LOOP: reply sent
3244:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3245:[SERVER]SERVER LOOP: reply sent
3246:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3247:[SERVER]SERVER LOOP: reply sent
3248:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3249:[SERVER]SERVER LOOP: reply sent
3250:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3251:[SERVER]SERVER LOOP: reply sent
3252:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3253:[SERVER]SERVER LOOP: reply sent
3254:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3255:[SERVER]SERVER LOOP: reply sent
3256:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3257:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3258:[SERVER]SERVER LOOP: reply sent
3259:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3260:[SERVER]SERVER LOOP: reply sent
3261:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3262:[SERVER]SERVER LOOP: reply sent
3263:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3264:[SERVER]SERVER LOOP: reply sent
3265:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3266:[SERVER]SERVER LOOP: reply sent
3267:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3268:[SERVER]SERVER LOOP: reply sent
3269:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3270:[SERVER]SERVER LOOP: reply sent
3271:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3272:[SERVER]SERVER LOOP: reply sent
3273:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3274:[SERVER]SERVER LOOP: reply sent
3275:[SERVER]SERVER LOOP: invoke queryState(pid=1)
3276:[SERVER]SERVER LOOP: reply sent
3277:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3278:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3279:[SERVER]SERVER LOOP: reply sent
3280:[SERVER]SERVER LOOP: ascync reply to resume(pid=0)
3281:[SERVER]SERVER LOOP: invoke resume(pid=0)
3282:[SERVER]SERVER LOOP: reply sent
3283:[SERVER]SERVER LOOP: invoke queryState(pid=2)
3284:[SERVER]SERVER LOOP: reply sent
3285:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
3286:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=0
3287:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=1
3288:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=2
3289:[callback]setStatus(obj=3,25,Process running.)  queue size=3
3290:[callback]processResumed(obj=1,null)  queue size=4
3291:[callback]writeToStdout(obj=1,null,[B@1c70315)  queue size=5
3292:[SERVER]SERVER LOOP: ascync reply to resume(pid=3)
3293:[SERVER]SERVER LOOP: invoke resume(pid=3)
3294:[SERVER]SERVER LOOP: reply sent
3295:[callback]updateComponent(obj=15,28,id=id1
 able=0
 )  queue size=4
3296:[callback]updateComponent(obj=15,28,id=id0
 able=0
 )  queue size=5
3297:[callback]updateComponent(obj=15,28,id=id2
 tip=No image data yet
 )  queue size=6
3298:[callback]setStatus(obj=15,28,Specify a non-zero address.)  queue size=7
3299:[callback]setStatus(obj=15,28,Process running.)  queue size=8
3300:[callback]writeToStdout(obj=1,null,[B@9b59a2)  queue size=9
3301:[callback]processResumed(obj=13,null)  queue size=10
3302:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3303:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3304:[SERVER]SERVER LOOP: reply sent
3305:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3306:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3307:[SERVER]SERVER LOOP: reply sent
3308:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
3309:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
3310:[SERVER]SERVER LOOP: reply sent
3311:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=3)
3312:[SERVER]SERVER LOOP: invoke setStackFrame(pid=3)
3313:[SERVER]SERVER LOOP: reply sent
3314:[callback]writeToStdout(obj=1,null,[B@14bc4e6)  queue size=0
3315:[callback]writeToStdout(obj=1,null,[B@16c06dd)  queue size=0
3316:[callback]writeToStdout(obj=1,null,[B@136bdda)  queue size=0
3317:[callback]writeToStdout(obj=1,null,[B@1ef3a22)  queue size=0
3318:[callback]writeToStdout(obj=1,null,[B@d1b72d)  queue size=0
3319:[callback]writeToStdout(obj=1,null,[B@511e0a)  queue size=0
3320:[callback]writeToStdout(obj=1,null,[B@18b3e62)  queue size=0
3321:[callback]writeToStdout(obj=1,null,[B@ac97cc)  queue size=0
3322:[callback]writeToStdout(obj=1,null,[B@121f653)  queue size=0
3323:[callback]writeToStdout(obj=1,null,[B@b2fb1e)  queue size=0
3324:[callback]writeToStdout(obj=1,null,[B@8497f6)  queue size=0
3325:[callback]writeToStdout(obj=1,null,[B@114a306)  queue size=0
3326:[callback]writeToStdout(obj=1,null,[B@1db0da1)  queue size=0
3327:[callback]writeToStdout(obj=1,null,[B@5bd978)  queue size=0
3328:[callback]writeToStdout(obj=1,null,[B@b34b1)  queue size=0
3329:[callback]writeToStdout(obj=1,null,[B@1b06a21)  queue size=0
3330:[callback]writeToStdout(obj=1,null,[B@107dcfe)  queue size=0
3331:[callback]writeToStdout(obj=1,null,[B@13dcd27)  queue size=0
3332:[callback]writeToStdout(obj=1,null,[B@67cd84)  queue size=0
3333:[callback]writeToStdout(obj=1,null,[B@e5ace9)  queue size=0
3334:[callback]writeToStdout(obj=1,null,[B@bb05de)  queue size=0
3335:[callback]writeToStdout(obj=1,null,[B@7e5619)  queue size=0
3336:[callback]writeToStdout(obj=1,null,[B@4693f9)  queue size=0
3337:[callback]writeToStdout(obj=1,null,[B@19ce47a)  queue size=0
3338:[callback]writeToStdout(obj=1,null,[B@15c2843)  queue size=0
3339:[callback]writeToStdout(obj=1,null,[B@15780d9)  queue size=0
3340:[callback]writeToStdout(obj=1,null,[B@1cc5461)  queue size=0
3341:[callback]writeToStdout(obj=1,null,[B@1b7edd3)  queue size=0
3342:[callback]writeToStdout(obj=1,null,[B@5ed853)  queue size=0
3343:[callback]writeToStdout(obj=1,null,[B@cc5436)  queue size=0
3344:[callback]writeToStdout(obj=1,null,[B@acbd3a)  queue size=0
3345:[callback]writeToStdout(obj=1,null,[B@bb6086)  queue size=0
3346:[callback]writeToStdout(obj=1,null,[B@1be1041)  queue size=0
3347:[callback]writeToStdout(obj=1,null,[B@13a1778)  queue size=0
3348:[callback]writeToStdout(obj=1,null,[B@dafa2c)  queue size=0
3349:[callback]writeToStdout(obj=1,null,[B@5e9db7)  queue size=0
3350:[callback]writeToStdout(obj=1,null,[B@1c4795e)  queue size=0
3351:[callback]writeToStdout(obj=1,null,[B@1fc25e5)  queue size=0
3352:[callback]writeToStdout(obj=1,null,[B@11c19e6)  queue size=0
3353:[callback]writeToStdout(obj=1,null,[B@b655a)  queue size=0
3354:[callback]writeToStdout(obj=1,null,[B@2b1682)  queue size=0
3355:[callback]writeToStdout(obj=1,null,[B@d2b918)  queue size=0
3356:[callback]writeToStdout(obj=1,null,[B@7616ad)  queue size=0
3357:[callback]writeToStdout(obj=1,null,[B@caf083)  queue size=0
3358:[callback]writeToStdout(obj=1,null,[B@1742dfe)  queue size=1
3359:[callback]writeToStdout(obj=1,null,[B@7787a5)  queue size=0
3360:[callback]writeToStdout(obj=1,null,[B@16a9424)  queue size=0
3361:[callback]writeToStdout(obj=1,null,[B@23d278)  queue size=0
3362:[callback]writeToStdout(obj=1,null,[B@1cec874)  queue size=0
3363:[callback]writeToStdout(obj=1,null,[B@ca6cea)  queue size=0
3364:[callback]writeToStdout(obj=1,null,[B@1b493c6)  queue size=0
3365:[callback]writeToStdout(obj=1,null,[B@51e67c)  queue size=0
3366:[callback]writeToStdout(obj=1,null,[B@f2da21)  queue size=0
3367:[callback]writeToStdout(obj=1,null,[B@1cee361)  queue size=0
3368:[callback]writeToStdout(obj=1,null,[B@1b22d99)  queue size=0
3369:[callback]writeToStdout(obj=1,null,[B@cfad31)  queue size=0
3370:[callback]writeToStdout(obj=1,null,[B@8be9ef)  queue size=0
3371:[callback]writeToStdout(obj=1,null,[B@1ab5dae)  queue size=0
3372:[callback]writeToStdout(obj=1,null,[B@19360e7)  queue size=0
3373:[callback]writeToStdout(obj=1,null,[B@bf1f20)  queue size=0
3374:[callback]writeToStdout(obj=1,null,[B@19480b8)  queue size=0
3375:[callback]writeToStdout(obj=1,null,[B@8ef177)  queue size=0
3376:[callback]writeToStdout(obj=1,null,[B@8ef455)  queue size=0
3377:[callback]writeToStdout(obj=1,null,[B@14b2f1a)  queue size=0
3378:[callback]writeToStdout(obj=1,null,[B@9d5793)  queue size=0
3379:[callback]writeToStdout(obj=1,null,[B@1e090ee)  queue size=0
3380:[callback]writeToStdout(obj=1,null,[B@4b2b75)  queue size=0
3381:[callback]writeToStdout(obj=1,null,[B@1123eb0)  queue size=0
3382:[callback]writeToStdout(obj=1,null,[B@d1a1ab)  queue size=0
3383:[callback]writeToStdout(obj=1,null,[B@cd2192)  queue size=0
3384:[callback]writeToStdout(obj=1,null,[B@1570c24)  queue size=0
3385:[callback]writeToStdout(obj=1,null,[B@1de4376)  queue size=0
3386:[callback]writeToStdout(obj=1,null,[B@11f139b)  queue size=0
3387:[callback]writeToStdout(obj=1,null,[B@1402eeb)  queue size=0
3388:[callback]writeToStdout(obj=1,null,[B@c87621)  queue size=0
3389:[callback]writeToStdout(obj=1,null,[B@c38157)  queue size=0
3390:[callback]writeToStdout(obj=1,null,[B@1609c13)  queue size=0
3391:[callback]writeToStdout(obj=1,null,[B@1a6b16f)  queue size=0
3392:[callback]writeToStdout(obj=1,null,[B@cb2185)  queue size=0
3393:[callback]writeToStdout(obj=1,null,[B@5ce40)  queue size=0
3394:[callback]writeToStdout(obj=1,null,[B@127ff0d)  queue size=0
3395:[callback]writeToStdout(obj=1,null,[B@d9cbcb)  queue size=0
3396:[callback]writeToStdout(obj=1,null,[B@d2b64e)  queue size=0
3397:[callback]writeToStdout(obj=1,null,[B@1bef1ac)  queue size=0
3398:[callback]writeToStdout(obj=1,null,[B@ec6bb1)  queue size=0
3399:[callback]writeToStdout(obj=1,null,[B@192425a)  queue size=0
3400:[callback]writeToStdout(obj=1,null,[B@1422384)  queue size=0
3401:[callback]writeToStdout(obj=1,null,[B@129c445)  queue size=0
3402:[callback]writeToStdout(obj=1,null,[B@114a947)  queue size=0
3403:[callback]writeToStdout(obj=1,null,[B@17599cc)  queue size=0
3404:[callback]writeToStdout(obj=1,null,[B@1c45731)  queue size=0
3405:[callback]writeToStdout(obj=1,null,[B@1388e5e)  queue size=0
3406:[callback]writeToStdout(obj=1,null,[B@ad483)  queue size=0
3407:[callback]writeToStdout(obj=1,null,[B@10613aa)  queue size=0
3408:[callback]writeToStdout(obj=1,null,[B@1f52460)  queue size=0
3409:[callback]writeToStdout(obj=1,null,[B@1275a34)  queue size=0
3410:[callback]writeToStdout(obj=1,null,[B@a6e0a9)  queue size=0
3411:[callback]writeToStdout(obj=1,null,[B@1e779a1)  queue size=0
3412:[callback]writeToStdout(obj=1,null,[B@1e26e52)  queue size=0
3413:[callback]writeToStdout(obj=1,null,[B@b8d09d)  queue size=0
3414:[callback]writeToStdout(obj=1,null,[B@187f9f1)  queue size=0
3415:[callback]writeToStdout(obj=1,null,[B@2a5ab9)  queue size=0
3416:[callback]writeToStdout(obj=1,null,[B@aa2ef2)  queue size=0
3417:[callback]writeToStdout(obj=1,null,[B@f052d5)  queue size=0
3418:[callback]writeToStdout(obj=1,null,[B@1ce4a8a)  queue size=0
3419:[callback]writeToStdout(obj=1,null,[B@7fc8b2)  queue size=0
3420:[callback]writeToStdout(obj=1,null,[B@15151aa)  queue size=0
3421:[callback]writeToStdout(obj=1,null,[B@1c87093)  queue size=0
3422:[callback]writeToStdout(obj=1,null,[B@56c3cf)  queue size=0
3423:[callback]writeToStdout(obj=1,null,[B@515263)  queue size=0
3424:[callback]writeToStdout(obj=1,null,[B@f81402)  queue size=0
3425:[callback]writeToStdout(obj=1,null,[B@e9b4bb)  queue size=0
3426:[callback]writeToStdout(obj=1,null,[B@1586cbd)  queue size=0
3427:[callback]writeToStdout(obj=1,null,[B@4b11e9)  queue size=0
3428:[callback]writeToStdout(obj=1,null,[B@84ff20)  queue size=0
3429:[callback]writeToStdout(obj=1,null,[B@189b939)  queue size=0
3430:[callback]writeToStdout(obj=1,null,[B@df824a)  queue size=0
3431:[callback]writeToStdout(obj=1,null,[B@1e2c9bf)  queue size=0
3432:[callback]writeToStdout(obj=1,null,[B@2b2af3)  queue size=0
3433:[callback]writeToStdout(obj=1,null,[B@10e9df)  queue size=0
3434:[callback]writeToStdout(obj=1,null,[B@6a2f81)  queue size=0
3435:[callback]writeToStdout(obj=1,null,[B@154ea79)  queue size=0
3436:[callback]writeToStdout(obj=1,null,[B@1edd9b3)  queue size=0
3437:[callback]writeToStdout(obj=1,null,[B@6f947b)  queue size=0
3438:[callback]writeToStdout(obj=1,null,[B@17d2f0e)  queue size=0
3439:[callback]writeToStdout(obj=1,null,[B@19c5048)  queue size=0
3440:[callback]writeToStdout(obj=1,null,[B@15ad1da)  queue size=0
3441:[callback]writeToStdout(obj=1,null,[B@1875da7)  queue size=0
3442:[callback]writeToStdout(obj=1,null,[B@a9a32c)  queue size=0
3443:[callback]writeToStdout(obj=1,null,[B@117c0eb)  queue size=0
3444:[callback]writeToStdout(obj=1,null,[B@7ab40c)  queue size=0
3445:[callback]writeToStdout(obj=1,null,[B@1c2a1ed)  queue size=0
3446:[callback]writeToStdout(obj=1,null,[B@114d18f)  queue size=0
3447:[callback]writeToStdout(obj=1,null,[B@1ca1a68)  queue size=0
3448:[callback]writeToStdout(obj=1,null,[B@18bbb61)  queue size=0
3449:[callback]writeToStdout(obj=1,null,[B@bb0406)  queue size=0
3450:[callback]writeToStdout(obj=1,null,[B@54824)  queue size=0
3451:[callback]writeToStdout(obj=1,null,[B@c3358b)  queue size=0
3452:[callback]writeToStdout(obj=1,null,[B@1f07597)  queue size=0
3453:[callback]writeToStdout(obj=1,null,[B@1b8119a)  queue size=0
3454:[callback]writeToStdout(obj=1,null,[B@18b9a72)  queue size=0
3455:[callback]writeToStdout(obj=1,null,[B@48bc64)  queue size=0
3456:[callback]writeToStdout(obj=1,null,[B@1486306)  queue size=0
3457:[callback]writeToStdout(obj=1,null,[B@15d4273)  queue size=0
3458:[callback]writeToStdout(obj=1,null,[B@1b595f3)  queue size=0
3459:[callback]writeToStdout(obj=1,null,[B@87ad67)  queue size=0
3460:[callback]writeToStdout(obj=1,null,[B@18952cc)  queue size=0
3461:[callback]writeToStdout(obj=1,null,[B@9af0b1)  queue size=0
3462:[callback]writeToStdout(obj=1,null,[B@300429)  queue size=0
3463:[callback]writeToStdout(obj=1,null,[B@6147d9)  queue size=0
3464:[callback]writeToStdout(obj=1,null,[B@b41166)  queue size=0
3465:[callback]writeToStdout(obj=1,null,[B@1e2481b)  queue size=0
3466:[callback]writeToStdout(obj=1,null,[B@ebf3f0)  queue size=0
3467:[callback]writeToStdout(obj=1,null,[B@dc4c81)  queue size=0
3468:[callback]writeToStdout(obj=1,null,[B@122dad5)  queue size=0
3469:[callback]writeToStdout(obj=1,null,[B@14ce5eb)  queue size=0
3470:[callback]writeToStdout(obj=1,null,[B@18abc7b)  queue size=0
3471:[callback]writeToStdout(obj=1,null,[B@15c6c8d)  queue size=0
3472:[callback]writeToStdout(obj=1,null,[B@dab859)  queue size=0
3473:[callback]writeToStdout(obj=1,null,[B@17cff66)  queue size=0
3474:[callback]writeToStdout(obj=1,null,[B@163a320)  queue size=0
3475:[callback]writeToStdout(obj=1,null,[B@6ac615)  queue size=0
3476:[callback]writeToStdout(obj=1,null,[B@1f2be27)  queue size=0
3477:[callback]writeToStdout(obj=1,null,[B@1a1f370)  queue size=0
3478:[callback]writeToStdout(obj=1,null,[B@1757337)  queue size=0
3479:[callback]writeToStdout(obj=1,null,[B@1df3d59)  queue size=0
3480:[callback]writeToStdout(obj=1,null,[B@134c5ff)  queue size=0
3481:[callback]writeToStdout(obj=1,null,[B@1b3278a)  queue size=0
3482:[callback]writeToStdout(obj=1,null,[B@e8f8c5)  queue size=0
3483:[callback]writeToStdout(obj=1,null,[B@1248979)  queue size=0
3484:[callback]writeToStdout(obj=1,null,[B@1c8b884)  queue size=0
3485:[SERVER]SERVER LOOP: invoke queryState(pid=0)
3486:[SERVER]SERVER LOOP: reply sent
3487:[SERVER]SERVER LOOP: invoke queryState(pid=3)
3488:[SERVER]SERVER LOOP: reply sent
3489:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3490:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3491:[SERVER]SERVER LOOP: reply sent
3492:[callback]writeToStdout(obj=13,null,[B@2153fe)  queue size=0
3493:[callback]writeToStdout(obj=1,null,[B@1e82b72)  queue size=0
3494:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
3495:[SERVER]SERVER LOOP: invoke stop(pid=0)
3496:[SERVER]SERVER LOOP: reply sent
3497:[SERVER]SERVER LOOP: ascync reply to stop(pid=1)
3498:[SERVER]SERVER LOOP: invoke stop(pid=1)
3499:[SERVER]SERVER LOOP: reply sent
3500:[SERVER]SERVER LOOP: ascync reply to stop(pid=2)
3501:[SERVER]SERVER LOOP: invoke stop(pid=2)
3502:[SERVER]SERVER LOOP: reply sent
3503:[callback]logMessage(obj=1,null,[1] Execution stopped.
)  queue size=0
3504:[callback]setStatus(obj=3,25,Execution stopped.)  queue size=1
3505:[callback]setStatus(obj=3,25,)  queue size=2
3506:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=3
3507:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=4
3508:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=5
3509:[callback]removeHighlights(obj=3,25,-1)  queue size=6
3510:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=7
3511:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=8
3512:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=9
3513:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=10
3514:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=11
3515:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=12
3516:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=13
3517:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=14
3518:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=15
3519:[callback]setBlanks(obj=3,25,9,14)  queue size=16
3520:[callback]refreshDisplay(obj=3,25)  queue size=17
3521:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=18
3522:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=19
3523:[callback]processStopped(obj=1,null,1)  queue size=14
3524:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=15
3525:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=16
3526:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=17
3527:[callback]removeHighlights(obj=3,25,-1)  queue size=18
3528:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=19
3529:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=20
3530:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=21
3531:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=22
3532:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=23
3533:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=24
3534:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=25
3535:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=26
3536:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=27
3537:[callback]setBlanks(obj=3,25,9,14)  queue size=28
3538:[callback]refreshDisplay(obj=3,25)  queue size=29
3539:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=30
3540:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=31
3541:[callback]updateViews(obj=3,)  queue size=32
3542:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=33
3543:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=34
3544:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=35
3545:[callback]removeHighlights(obj=3,25,-1)  queue size=36
3546:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=37
3547:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=38
3548:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=39
3549:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=40
3550:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=41
3551:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=42
3552:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=43
3553:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=44
3554:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=45
3555:[callback]setBlanks(obj=3,25,9,14)  queue size=46
3556:[callback]refreshDisplay(obj=3,25)  queue size=47
3557:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=48
3558:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=49
3559:[callback]updateViews(obj=3,)  queue size=50
3560:[callback]logMessage(obj=1,null,[2] Execution stopped.
)  queue size=51
3561:[callback]setStatus(obj=7,26,Execution stopped.)  queue size=52
3562:[callback]setStatus(obj=7,26,)  queue size=53
3563:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=54
3564:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=55
3565:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=56
3566:[callback]removeHighlights(obj=7,26,-1)  queue size=57
3567:[callback]setLine(obj=7,26,0,Image specifications: 8-bit gray scale -- scaled)  queue size=58
3568:[callback]setLine(obj=7,26,1,Image specification not yet valid -- specify a non-zero address)  queue size=59
3569:[callback]setLine(obj=7,26,2,  Address    : 0x0)  queue size=60
3570:[callback]setLine(obj=7,26,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=61
3571:[callback]setLine(obj=7,26,4,  Auto-update: on)  queue size=62
3572:[callback]setLine(obj=7,26,5, Timed-update: off)  queue size=63
3573:[callback]setLine(obj=7,26,6,    Scaling  : on)  queue size=64
3574:[callback]setLine(obj=7,26,7,  0 -- number of times image was read from memory.)  queue size=65
3575:[callback]setLine(obj=7,26,8,  0 -- number of times image changed and was updated to display)  queue size=66
3576:[callback]setBlanks(obj=7,26,9,14)  queue size=67
3577:[callback]refreshDisplay(obj=7,26)  queue size=68
3578:[callback]setScrollBar(obj=7,26,0,15,0,8,14)  queue size=69
3579:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=70
3580:[callback]processStopped(obj=5,null,1)  queue size=71
3581:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=72
3582:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=73
3583:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=74
3584:[callback]removeHighlights(obj=3,25,-1)  queue size=75
3585:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=76
3586:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=77
3587:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=78
3588:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=79
3589:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=80
3590:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=81
3591:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=82
3592:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=83
3593:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=84
3594:[callback]setBlanks(obj=3,25,9,14)  queue size=85
3595:[callback]refreshDisplay(obj=3,25)  queue size=86
3596:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=87
3597:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=88
3598:[callback]updateViews(obj=3,)  queue size=89
3599:[callback]logMessage(obj=1,null,[3] Execution stopped.
)  queue size=90
3600:[callback]setStatus(obj=11,27,Execution stopped.)  queue size=91
3601:[callback]setStatus(obj=11,27,)  queue size=92
3602:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=93
3603:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=94
3604:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=95
3605:[callback]removeHighlights(obj=11,27,-1)  queue size=96
3606:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=97
3607:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=98
3608:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=99
3609:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=100
3610:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=101
3611:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=102
3612:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=103
3613:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=104
3614:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=105
3615:[callback]setBlanks(obj=11,27,9,12)  queue size=106
3616:[callback]refreshDisplay(obj=11,27)  queue size=107
3617:[callback]setScrollBar(obj=11,27,0,13,0,8,12)  queue size=108
3618:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=109
3619:[callback]processStopped(obj=9,null,1)  queue size=110
3620:[SERVER]SERVER LOOP: invoke queryState(pid=0)
3621:[SERVER]SERVER LOOP: reply sent
3622:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3623:[SERVER]SERVER LOOP: reply sent
3624:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3625:[SERVER]SERVER LOOP: reply sent
3626:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3627:[SERVER]SERVER LOOP: reply sent
3628:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3629:[SERVER]SERVER LOOP: reply sent
3630:[callback]logMessage(obj=1,null,[1] Flushing data cache.
)  queue size=93
3631:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3632:[SERVER]SERVER LOOP: reply sent
3633:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3634:[SERVER]SERVER LOOP: reply sent
3635:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3636:[SERVER]SERVER LOOP: reply sent
3637:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3638:[SERVER]SERVER LOOP: reply sent
3639:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3640:[SERVER]SERVER LOOP: reply sent
3641:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3642:[SERVER]SERVER LOOP: reply sent
3643:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3644:[SERVER]SERVER LOOP: reply sent
3645:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3646:[SERVER]SERVER LOOP: reply sent
3647:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3648:[SERVER]SERVER LOOP: reply sent
3649:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3650:[SERVER]SERVER LOOP: reply sent
3651:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3652:[SERVER]SERVER LOOP: reply sent
3653:[SERVER]SERVER LOOP: invoke queryState(pid=1)
3654:[SERVER]SERVER LOOP: reply sent
3655:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3656:[SERVER]SERVER LOOP: reply sent
3657:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3658:[SERVER]SERVER LOOP: reply sent
3659:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3660:[SERVER]SERVER LOOP: reply sent
3661:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3662:[SERVER]SERVER LOOP: reply sent
3663:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3664:[SERVER]SERVER LOOP: reply sent
3665:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3666:[SERVER]SERVER LOOP: reply sent
3667:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3668:[SERVER]SERVER LOOP: reply sent
3669:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3670:[SERVER]SERVER LOOP: reply sent
3671:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3672:[SERVER]SERVER LOOP: reply sent
3673:[SERVER]SERVER LOOP: invoke queryState(pid=2)
3674:[SERVER]SERVER LOOP: reply sent
3675:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3676:[SERVER]SERVER LOOP: reply sent
3677:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3678:[SERVER]SERVER LOOP: reply sent
3679:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3680:[SERVER]SERVER LOOP: reply sent
3681:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3682:[SERVER]SERVER LOOP: reply sent
3683:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3684:[SERVER]SERVER LOOP: reply sent
3685:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3686:[SERVER]SERVER LOOP: reply sent
3687:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
3688:[SERVER]SERVER LOOP: reply sent
3689:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=1)
3690:[SERVER]SERVER LOOP: reply sent
3691:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
3692:[SERVER]SERVER LOOP: reply sent
3693:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
3694:[SERVER]SERVER LOOP: reply sent
3695:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
3696:[SERVER]SERVER LOOP: reply sent
3697:[callback]logMessage(obj=1,null,[2] Flushing data cache.
)  queue size=0
3698:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
3699:[SERVER]SERVER LOOP: reply sent
3700:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=1)
3701:[SERVER]SERVER LOOP: reply sent
3702:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
3703:[SERVER]SERVER LOOP: reply sent
3704:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3705:[SERVER]SERVER LOOP: reply sent
3706:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3707:[SERVER]SERVER LOOP: reply sent
3708:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
3709:[SERVER]SERVER LOOP: reply sent
3710:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3711:[SERVER]SERVER LOOP: reply sent
3712:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3713:[SERVER]SERVER LOOP: reply sent
3714:[SERVER]SERVER LOOP: invoke getFramePointer(pid=1)
3715:[SERVER]SERVER LOOP: reply sent
3716:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=2)
3717:[SERVER]SERVER LOOP: reply sent
3718:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3719:[SERVER]SERVER LOOP: reply sent
3720:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3721:[SERVER]SERVER LOOP: reply sent
3722:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3723:[SERVER]SERVER LOOP: reply sent
3724:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3725:[SERVER]SERVER LOOP: reply sent
3726:[callback]logMessage(obj=1,null,[3] Flushing data cache.
)  queue size=0
3727:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3728:[SERVER]SERVER LOOP: reply sent
3729:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3730:[SERVER]SERVER LOOP: reply sent
3731:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3732:[SERVER]SERVER LOOP: reply sent
3733:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3734:[SERVER]SERVER LOOP: reply sent
3735:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3736:[SERVER]SERVER LOOP: reply sent
3737:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3738:[SERVER]SERVER LOOP: reply sent
3739:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3740:[SERVER]SERVER LOOP: reply sent
3741:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
3742:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
3743:[SERVER]SERVER LOOP: reply sent
3744:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3745:[SERVER]SERVER LOOP: reply sent
3746:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=2)
3747:[SERVER]SERVER LOOP: reply sent
3748:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
3749:[SERVER]SERVER LOOP: reply sent
3750:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3751:[SERVER]SERVER LOOP: reply sent
3752:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3753:[SERVER]SERVER LOOP: reply sent
3754:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3755:[SERVER]SERVER LOOP: reply sent
3756:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3757:[SERVER]SERVER LOOP: reply sent
3758:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3759:[SERVER]SERVER LOOP: reply sent
3760:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
3761:[SERVER]SERVER LOOP: reply sent
3762:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3763:[SERVER]SERVER LOOP: reply sent
3764:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3765:[SERVER]SERVER LOOP: reply sent
3766:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3767:[SERVER]SERVER LOOP: reply sent
3768:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3769:[SERVER]SERVER LOOP: reply sent
3770:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3771:[SERVER]SERVER LOOP: reply sent
3772:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3773:[SERVER]SERVER LOOP: reply sent
3774:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3775:[SERVER]SERVER LOOP: reply sent
3776:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3777:[SERVER]SERVER LOOP: reply sent
3778:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3779:[SERVER]SERVER LOOP: reply sent
3780:[SERVER]SERVER LOOP: invoke getFramePointer(pid=2)
3781:[SERVER]SERVER LOOP: reply sent
3782:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3783:[SERVER]SERVER LOOP: reply sent
3784:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3785:[SERVER]SERVER LOOP: reply sent
3786:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3787:[SERVER]SERVER LOOP: reply sent
3788:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3789:[SERVER]SERVER LOOP: reply sent
3790:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3791:[SERVER]SERVER LOOP: reply sent
3792:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3793:[SERVER]SERVER LOOP: reply sent
3794:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3795:[SERVER]SERVER LOOP: reply sent
3796:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3797:[SERVER]SERVER LOOP: reply sent
3798:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3799:[SERVER]SERVER LOOP: reply sent
3800:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
3801:[SERVER]SERVER LOOP: reply sent
3802:[SERVER]SERVER LOOP: invoke getPC(pid=0)
3803:[SERVER]SERVER LOOP: reply sent
3804:[SERVER]SERVER LOOP: invoke getPC(pid=1)
3805:[SERVER]SERVER LOOP: reply sent
3806:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3807:[SERVER]SERVER LOOP: reply sent
3808:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3809:[SERVER]SERVER LOOP: reply sent
3810:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
3811:[SERVER]SERVER LOOP: reply sent
3812:[SERVER]SERVER LOOP: ascync reply to resume(pid=0)
3813:[SERVER]SERVER LOOP: invoke resume(pid=0)
3814:[SERVER]SERVER LOOP: reply sent
3815:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
3816:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=0
3817:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=0
3818:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=0
3819:[callback]setStatus(obj=3,25,Process running.)  queue size=1
3820:[callback]processResumed(obj=1,null)  queue size=2
3821:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3822:[SERVER]SERVER LOOP: reply sent
3823:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3824:[SERVER]SERVER LOOP: reply sent
3825:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3826:[SERVER]SERVER LOOP: reply sent
3827:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3828:[SERVER]SERVER LOOP: reply sent
3829:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3830:[SERVER]SERVER LOOP: reply sent
3831:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
3832:[SERVER]SERVER LOOP: reply sent
3833:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
3834:[SERVER]SERVER LOOP: reply sent
3835:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3836:[SERVER]SERVER LOOP: reply sent
3837:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3838:[SERVER]SERVER LOOP: reply sent
3839:[SERVER]SERVER LOOP: invoke computeLocation(pid=1)
3840:[SERVER]SERVER LOOP: reply sent
3841:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3842:[SERVER]SERVER LOOP: reply sent
3843:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3844:[SERVER]SERVER LOOP: reply sent
3845:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3846:[SERVER]SERVER LOOP: reply sent
3847:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3848:[SERVER]SERVER LOOP: reply sent
3849:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3850:[SERVER]SERVER LOOP: reply sent
3851:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3852:[SERVER]SERVER LOOP: reply sent
3853:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3854:[SERVER]SERVER LOOP: reply sent
3855:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3856:[SERVER]SERVER LOOP: reply sent
3857:[SERVER]SERVER LOOP: invoke getPC(pid=2)
3858:[SERVER]SERVER LOOP: reply sent
3859:[SERVER]SERVER LOOP: invoke computeLocation(pid=2)
3860:[SERVER]SERVER LOOP: reply sent
3861:[callback]writeToStdout(obj=1,null,[B@1a2da17)  queue size=0
3862:[callback]writeToStdout(obj=1,null,[B@174f02c)  queue size=0
3863:[callback]writeToStdout(obj=1,null,[B@44006e)  queue size=0
3864:[callback]writeToStdout(obj=1,null,[B@78529d)  queue size=0
3865:[callback]writeToStdout(obj=1,null,[B@177ff35)  queue size=0
3866:[callback]writeToStdout(obj=1,null,[B@11402c4)  queue size=0
3867:[callback]writeToStdout(obj=1,null,[B@c19fbf)  queue size=0
3868:[callback]writeToStdout(obj=1,null,[B@1ded4c9)  queue size=1
3869:[callback]writeToStdout(obj=13,null,[B@63e563)  queue size=0
3870:[callback]writeToStdout(obj=1,null,[B@690247)  queue size=0
3871:[callback]writeToStdout(obj=1,null,[B@14a97b)  queue size=0
3872:[callback]writeToStdout(obj=1,null,[B@82e4f3)  queue size=0
3873:[callback]writeToStdout(obj=1,null,[B@1852a81)  queue size=0
3874:[callback]writeToStdout(obj=1,null,[B@1a9883d)  queue size=0
3875:[callback]writeToStdout(obj=1,null,[B@12f9924)  queue size=1
3876:[callback]writeToStdout(obj=1,null,[B@1ef3212)  queue size=0
3877:[callback]writeToStdout(obj=1,null,[B@c07527)  queue size=0
3878:[callback]writeToStdout(obj=1,null,[B@14b74a7)  queue size=0
3879:[callback]writeToStdout(obj=1,null,[B@d78df0)  queue size=0
3880:[callback]writeToStdout(obj=1,null,[B@1a7c484)  queue size=1
3881:[callback]writeToStdout(obj=1,null,[B@156d7c8)  queue size=2
3882:[callback]writeToStdout(obj=1,null,[B@70c38c)  queue size=0
3883:[callback]writeToStdout(obj=1,null,[B@1364dcb)  queue size=0
3884:[callback]writeToStdout(obj=1,null,[B@2d502d)  queue size=0
3885:[callback]writeToStdout(obj=1,null,[B@eac7c8)  queue size=0
3886:[callback]writeToStdout(obj=1,null,[B@1e22632)  queue size=0
3887:[callback]writeToStdout(obj=1,null,[B@39be68)  queue size=1
3888:[callback]writeToStdout(obj=1,null,[B@103d246)  queue size=0
3889:[callback]writeToStdout(obj=1,null,[B@1e21f52)  queue size=0
3890:[callback]writeToStdout(obj=1,null,[B@76458f)  queue size=0
3891:[callback]writeToStdout(obj=1,null,[B@d0deb5)  queue size=0
3892:[callback]writeToStdout(obj=1,null,[B@136c55)  queue size=1
3893:[callback]writeToStdout(obj=1,null,[B@12d7d02)  queue size=2
3894:[callback]writeToStdout(obj=1,null,[B@16a4a67)  queue size=3
3895:[callback]writeToStdout(obj=1,null,[B@13af084)  queue size=0
3896:[callback]writeToStdout(obj=1,null,[B@8491b8)  queue size=1
3897:[callback]writeToStdout(obj=1,null,[B@17af46e)  queue size=2
3898:[callback]writeToStdout(obj=1,null,[B@14596d5)  queue size=1
3899:[callback]writeToStdout(obj=1,null,[B@1b19753)  queue size=0
3900:[callback]writeToStdout(obj=1,null,[B@45ce17)  queue size=1
3901:[callback]writeToStdout(obj=1,null,[B@dd5681)  queue size=0
3902:[callback]writeToStdout(obj=1,null,[B@15a4523)  queue size=0
3903:[callback]writeToStdout(obj=1,null,[B@171120a)  queue size=0
3904:[callback]writeToStdout(obj=1,null,[B@57828d)  queue size=0
3905:[callback]writeToStdout(obj=1,null,[B@13c296b)  queue size=1
3906:[callback]writeToStdout(obj=1,null,[B@c360a5)  queue size=1
3907:[callback]writeToStdout(obj=1,null,[B@fe2558)  queue size=1
3908:[callback]writeToStdout(obj=1,null,[B@145c761)  queue size=2
3909:[callback]writeToStdout(obj=1,null,[B@24c672)  queue size=0
3910:[callback]writeToStdout(obj=1,null,[B@6078e7)  queue size=0
3911:[callback]writeToStdout(obj=1,null,[B@1a1bc40)  queue size=0
3912:[callback]writeToStdout(obj=1,null,[B@14e40da)  queue size=1
3913:[callback]writeToStdout(obj=1,null,[B@83b00f)  queue size=0
3914:[callback]writeToStdout(obj=1,null,[B@19bd735)  queue size=0
3915:[callback]writeToStdout(obj=1,null,[B@4e17f9)  queue size=1
3916:[callback]writeToStdout(obj=1,null,[B@107f742)  queue size=0
3917:[callback]writeToStdout(obj=1,null,[B@1fa490e)  queue size=1
3918:[callback]writeToStdout(obj=1,null,[B@d23e53)  queue size=2
3919:[callback]writeToStdout(obj=1,null,[B@f9f91d)  queue size=0
3920:[callback]writeToStdout(obj=1,null,[B@151f910)  queue size=0
3921:[callback]writeToStdout(obj=1,null,[B@b6a6d6)  queue size=0
3922:[callback]writeToStdout(obj=1,null,[B@18346a3)  queue size=0
3923:[callback]writeToStdout(obj=1,null,[B@19299f5)  queue size=0
3924:[callback]writeToStdout(obj=1,null,[B@1b9d4d8)  queue size=0
3925:[callback]writeToStdout(obj=1,null,[B@144b9ff)  queue size=0
3926:[callback]writeToStdout(obj=1,null,[B@10f34cc)  queue size=0
3927:[callback]writeToStdout(obj=1,null,[B@1535a58)  queue size=0
3928:[callback]writeToStdout(obj=1,null,[B@1505258)  queue size=0
3929:[callback]writeToStdout(obj=1,null,[B@4e194f)  queue size=0
3930:[callback]writeToStdout(obj=1,null,[B@15fd251)  queue size=1
3931:[callback]writeToStdout(obj=1,null,[B@1e8e144)  queue size=0
3932:[callback]writeToStdout(obj=1,null,[B@1d592a)  queue size=0
3933:[callback]writeToStdout(obj=1,null,[B@c8e4de)  queue size=0
3934:[callback]writeToStdout(obj=1,null,[B@129df8a)  queue size=0
3935:[callback]writeToStdout(obj=1,null,[B@12e4cd)  queue size=0
3936:[callback]writeToStdout(obj=1,null,[B@6b51d8)  queue size=0
3937:[callback]writeToStdout(obj=1,null,[B@1ca5df9)  queue size=0
3938:[callback]writeToStdout(obj=1,null,[B@df9095)  queue size=0
3939:[callback]writeToStdout(obj=1,null,[B@18d4c9a)  queue size=0
3940:[callback]writeToStdout(obj=1,null,[B@1a02097)  queue size=0
3941:[callback]writeToStdout(obj=1,null,[B@1bbc779)  queue size=1
3942:[callback]writeToStdout(obj=1,null,[B@124e935)  queue size=2
3943:[callback]writeToStdout(obj=1,null,[B@4ac866)  queue size=3
3944:[callback]writeToStdout(obj=1,null,[B@1aac07d)  queue size=0
3945:[callback]writeToStdout(obj=1,null,[B@1435ec9)  queue size=0
3946:[callback]writeToStdout(obj=1,null,[B@3dfcb)  queue size=1
3947:[callback]writeToStdout(obj=1,null,[B@59a735)  queue size=0
3948:[callback]writeToStdout(obj=1,null,[B@1f09a31)  queue size=0
3949:[callback]writeToStdout(obj=1,null,[B@11b1d80)  queue size=0
3950:[callback]writeToStdout(obj=1,null,[B@12ddfe4)  queue size=0
3951:[callback]writeToStdout(obj=1,null,[B@c62080)  queue size=0
3952:[callback]writeToStdout(obj=1,null,[B@17fc44f)  queue size=0
3953:[callback]writeToStdout(obj=1,null,[B@13136e5)  queue size=0
3954:[callback]writeToStdout(obj=1,null,[B@b2c64)  queue size=0
3955:[callback]writeToStdout(obj=1,null,[B@18f7701)  queue size=0
3956:[callback]writeToStdout(obj=1,null,[B@1cdfd19)  queue size=0
3957:[callback]writeToStdout(obj=1,null,[B@a37c6a)  queue size=0
3958:[callback]writeToStdout(obj=1,null,[B@13d21d6)  queue size=0
3959:[callback]writeToStdout(obj=1,null,[B@7881db)  queue size=1
3960:[callback]writeToStdout(obj=1,null,[B@1956391)  queue size=2
3961:[callback]writeToStdout(obj=1,null,[B@bbf7aa)  queue size=0
3962:[callback]writeToStdout(obj=1,null,[B@80ed90)  queue size=0
3963:[callback]writeToStdout(obj=1,null,[B@6cc2a4)  queue size=0
3964:[callback]writeToStdout(obj=1,null,[B@5ead9d)  queue size=0
3965:[callback]writeToStdout(obj=1,null,[B@1d8417c)  queue size=0
3966:[callback]writeToStdout(obj=1,null,[B@b34646)  queue size=1
3967:[callback]writeToStdout(obj=1,null,[B@1cac3fa)  queue size=2
3968:[callback]writeToStdout(obj=1,null,[B@10872ce)  queue size=3
3969:[callback]writeToStdout(obj=1,null,[B@1a93f38)  queue size=0
3970:[callback]writeToStdout(obj=1,null,[B@75b3ee)  queue size=0
3971:[callback]writeToStdout(obj=1,null,[B@177fa9a)  queue size=0
3972:[callback]writeToStdout(obj=1,null,[B@1e5ba24)  queue size=0
3973:[callback]writeToStdout(obj=1,null,[B@11fc4b8)  queue size=0
3974:[callback]writeToStdout(obj=1,null,[B@ac4d3b)  queue size=1
3975:[callback]writeToStdout(obj=1,null,[B@29d75)  queue size=0
3976:[callback]writeToStdout(obj=1,null,[B@1af9e98)  queue size=0
3977:[callback]writeToStdout(obj=1,null,[B@d51a54)  queue size=0
3978:[callback]writeToStdout(obj=1,null,[B@b3ae5c)  queue size=0
3979:[callback]writeToStdout(obj=1,null,[B@7c218e)  queue size=0
3980:[callback]writeToStdout(obj=1,null,[B@17f0d94)  queue size=0
3981:[callback]writeToStdout(obj=1,null,[B@54777e)  queue size=0
3982:[callback]writeToStdout(obj=1,null,[B@1712193)  queue size=0
3983:[callback]writeToStdout(obj=1,null,[B@537935)  queue size=0
3984:[callback]writeToStdout(obj=1,null,[B@3aa791)  queue size=0
3985:[callback]writeToStdout(obj=1,null,[B@cf3539)  queue size=0
3986:[callback]writeToStdout(obj=1,null,[B@1af4309)  queue size=0
3987:[callback]writeToStdout(obj=1,null,[B@15a2dc4)  queue size=1
3988:[callback]writeToStdout(obj=1,null,[B@172c47b)  queue size=2
3989:[callback]writeToStdout(obj=1,null,[B@1c187c8)  queue size=0
3990:[callback]writeToStdout(obj=1,null,[B@b95f72)  queue size=0
3991:[callback]writeToStdout(obj=1,null,[B@294f62)  queue size=0
3992:[callback]writeToStdout(obj=1,null,[B@1abf87)  queue size=0
3993:[callback]writeToStdout(obj=1,null,[B@1450bd)  queue size=0
3994:[callback]writeToStdout(obj=1,null,[B@1c0bee6)  queue size=0
3995:[callback]writeToStdout(obj=1,null,[B@1e0e954)  queue size=0
3996:[callback]writeToStdout(obj=1,null,[B@f6a882)  queue size=0
3997:[callback]writeToStdout(obj=1,null,[B@1b104d7)  queue size=0
3998:[callback]writeToStdout(obj=1,null,[B@b4d39c)  queue size=0
3999:[callback]writeToStdout(obj=1,null,[B@1b0d33c)  queue size=1
4000:[callback]writeToStdout(obj=1,null,[B@1fc468e)  queue size=1
4001:[callback]writeToStdout(obj=1,null,[B@17c398e)  queue size=2
4002:[callback]writeToStdout(obj=1,null,[B@a69b6b)  queue size=3
4003:[callback]writeToStdout(obj=1,null,[B@25b72a)  queue size=4
4004:[callback]writeToStdout(obj=1,null,[B@1c5cd7)  queue size=5
4005:[callback]writeToStdout(obj=1,null,[B@13515e)  queue size=6
4006:[callback]writeToStdout(obj=1,null,[B@43153c)  queue size=7
4007:[callback]writeToStdout(obj=1,null,[B@273f4e)  queue size=8
4008:[callback]writeToStdout(obj=1,null,[B@ad4d40)  queue size=0
4009:[callback]writeToStdout(obj=1,null,[B@1aacc14)  queue size=1
4010:[callback]writeToStdout(obj=1,null,[B@3c37f4)  queue size=2
4011:[callback]writeToStdout(obj=1,null,[B@17d7c7f)  queue size=0
4012:[callback]writeToStdout(obj=1,null,[B@178a7d9)  queue size=0
4013:[callback]writeToStdout(obj=1,null,[B@53d3cf)  queue size=1
4014:[callback]writeToStdout(obj=1,null,[B@176de14)  queue size=0
4015:[callback]writeToStdout(obj=1,null,[B@ee21f5)  queue size=0
4016:[callback]writeToStdout(obj=1,null,[B@1f7896f)  queue size=1
4017:[callback]writeToStdout(obj=1,null,[B@6014f7)  queue size=0
4018:[callback]writeToStdout(obj=1,null,[B@9ab0)  queue size=1
4019:[callback]writeToStdout(obj=1,null,[B@1abbec4)  queue size=0
4020:[callback]writeToStdout(obj=1,null,[B@796e1c)  queue size=0
4021:[callback]writeToStdout(obj=1,null,[B@2c03ff)  queue size=0
4022:[callback]writeToStdout(obj=1,null,[B@1ba92db)  queue size=0
4023:[callback]writeToStdout(obj=1,null,[B@1ff6de1)  queue size=0
4024:[callback]writeToStdout(obj=1,null,[B@86d1da)  queue size=0
4025:[callback]writeToStdout(obj=1,null,[B@13b625b)  queue size=0
4026:[callback]writeToStdout(obj=1,null,[B@1b67d6a)  queue size=0
4027:[callback]writeToStdout(obj=1,null,[B@1e3cc77)  queue size=0
4028:[callback]writeToStdout(obj=1,null,[B@84aa02)  queue size=0
4029:[callback]writeToStdout(obj=1,null,[B@1b5a40a)  queue size=0
4030:[callback]writeToStdout(obj=1,null,[B@24bfaa)  queue size=1
4031:[callback]writeToStdout(obj=1,null,[B@a34783)  queue size=0
4032:[callback]writeToStdout(obj=1,null,[B@1ac13d7)  queue size=0
4033:[callback]writeToStdout(obj=1,null,[B@4ab84c)  queue size=0
4034:[callback]writeToStdout(obj=1,null,[B@189acb5)  queue size=0
4035:[callback]writeToStdout(obj=1,null,[B@1a9bea3)  queue size=0
4036:[callback]writeToStdout(obj=1,null,[B@122cc7e)  queue size=0
4037:[callback]writeToStdout(obj=1,null,[B@19f90e3)  queue size=0
4038:[callback]writeToStdout(obj=1,null,[B@e13e7b)  queue size=0
4039:[callback]writeToStdout(obj=1,null,[B@1cd2197)  queue size=1
4040:[callback]writeToStdout(obj=1,null,[B@5878d2)  queue size=0
4041:[callback]writeToStdout(obj=1,null,[B@643edd)  queue size=1
4042:[callback]writeToStdout(obj=1,null,[B@15b55bc)  queue size=2
4043:[callback]writeToStdout(obj=1,null,[B@159d87f)  queue size=3
4044:[callback]writeToStdout(obj=1,null,[B@1949f78)  queue size=0
4045:[callback]writeToStdout(obj=1,null,[B@71949b)  queue size=0
4046:[callback]writeToStdout(obj=1,null,[B@d37b87)  queue size=0
4047:[callback]writeToStdout(obj=1,null,[B@52eef4)  queue size=0
4048:[callback]writeToStdout(obj=1,null,[B@c5f20f)  queue size=0
4049:[callback]writeToStdout(obj=1,null,[B@196de29)  queue size=0
4050:[callback]writeToStdout(obj=1,null,[B@1d382ab)  queue size=0
4051:[callback]writeToStdout(obj=1,null,[B@127e2ee)  queue size=0
4052:[callback]writeToStdout(obj=1,null,[B@1a3b359)  queue size=0
4053:[callback]writeToStdout(obj=1,null,[B@539f0d)  queue size=0
4054:[callback]writeToStdout(obj=1,null,[B@1ef4b2b)  queue size=0
4055:[callback]writeToStdout(obj=1,null,[B@1302b69)  queue size=1
4056:[callback]writeToStdout(obj=1,null,[B@17210a5)  queue size=2
4057:[callback]writeToStdout(obj=1,null,[B@1a2f5b1)  queue size=0
4058:[callback]writeToStdout(obj=1,null,[B@1b071c0)  queue size=0
4059:[callback]writeToStdout(obj=1,null,[B@fbf51d)  queue size=0
4060:[callback]writeToStdout(obj=1,null,[B@19977bd)  queue size=0
4061:[callback]writeToStdout(obj=1,null,[B@842d9a)  queue size=0
4062:[callback]writeToStdout(obj=1,null,[B@1ce00b4)  queue size=0
4063:[callback]writeToStdout(obj=1,null,[B@19067e5)  queue size=0
4064:[callback]writeToStdout(obj=1,null,[B@1950e0a)  queue size=0
4065:[callback]writeToStdout(obj=1,null,[B@ccd21c)  queue size=0
4066:[callback]writeToStdout(obj=1,null,[B@f62eba)  queue size=0
4067:[callback]writeToStdout(obj=1,null,[B@75c744)  queue size=1
4068:[callback]writeToStdout(obj=1,null,[B@6d6aa0)  queue size=0
4069:[callback]writeToStdout(obj=1,null,[B@17361e2)  queue size=0
4070:[callback]writeToStdout(obj=1,null,[B@1f6321)  queue size=0
4071:[callback]writeToStdout(obj=1,null,[B@a50da4)  queue size=1
4072:[callback]writeToStdout(obj=1,null,[B@229ed4)  queue size=0
4073:[callback]writeToStdout(obj=1,null,[B@e9a7c2)  queue size=0
4074:[callback]writeToStdout(obj=1,null,[B@4dd1b)  queue size=0
4075:[callback]writeToStdout(obj=1,null,[B@1503458)  queue size=0
4076:[callback]writeToStdout(obj=1,null,[B@9ca1fb)  queue size=0
4077:[callback]writeToStdout(obj=1,null,[B@14e9851)  queue size=0
4078:[callback]writeToStdout(obj=1,null,[B@f1fad1)  queue size=0
4079:[callback]writeToStdout(obj=1,null,[B@89ec59)  queue size=0
4080:[callback]writeToStdout(obj=1,null,[B@fbcb70)  queue size=0
4081:[callback]writeToStdout(obj=1,null,[B@e931d9)  queue size=0
4082:[callback]writeToStdout(obj=1,null,[B@1c7d56b)  queue size=0
4083:[callback]writeToStdout(obj=1,null,[B@8c858a)  queue size=0
4084:[callback]writeToStdout(obj=1,null,[B@1933acb)  queue size=0
4085:[callback]writeToStdout(obj=1,null,[B@f9104a)  queue size=0
4086:[callback]writeToStdout(obj=1,null,[B@19c9f16)  queue size=0
4087:[callback]writeToStdout(obj=1,null,[B@1909385)  queue size=0
4088:[callback]writeToStdout(obj=1,null,[B@c51614)  queue size=0
4089:[callback]writeToStdout(obj=1,null,[B@12ca580)  queue size=0
4090:[callback]writeToStdout(obj=1,null,[B@257b34)  queue size=0
4091:[callback]writeToStdout(obj=1,null,[B@bbbd0e)  queue size=0
4092:[callback]writeToStdout(obj=1,null,[B@178efd8)  queue size=0
4093:[callback]writeToStdout(obj=1,null,[B@ca5bff)  queue size=0
4094:[callback]writeToStdout(obj=1,null,[B@15dd32a)  queue size=0
4095:[callback]writeToStdout(obj=1,null,[B@d28dfa)  queue size=0
4096:[callback]writeToStdout(obj=1,null,[B@16721bd)  queue size=0
4097:[callback]writeToStdout(obj=1,null,[B@1cd3dd7)  queue size=0
4098:[callback]writeToStdout(obj=1,null,[B@1970ae0)  queue size=0
4099:[callback]writeToStdout(obj=1,null,[B@14af9f7)  queue size=0
4100:[callback]writeToStdout(obj=1,null,[B@160e069)  queue size=1
4101:[callback]writeToStdout(obj=1,null,[B@12d26d2)  queue size=2
4102:[callback]writeToStdout(obj=1,null,[B@14fcd9a)  queue size=0
4103:[callback]writeToStdout(obj=1,null,[B@43487e)  queue size=0
4104:[callback]writeToStdout(obj=1,null,[B@14c7a98)  queue size=0
4105:[callback]writeToStdout(obj=1,null,[B@4a96a)  queue size=1
4106:[callback]writeToStdout(obj=1,null,[B@e920f)  queue size=2
4107:[callback]writeToStdout(obj=1,null,[B@974600)  queue size=0
4108:[callback]writeToStdout(obj=1,null,[B@174cb21)  queue size=0
4109:[callback]writeToStdout(obj=1,null,[B@c3e967)  queue size=1
4110:[callback]writeToStdout(obj=1,null,[B@1079ff)  queue size=2
4111:[callback]writeToStdout(obj=1,null,[B@1b963c4)  queue size=3
4112:[callback]writeToStdout(obj=1,null,[B@44ffb2)  queue size=4
4113:[callback]writeToStdout(obj=1,null,[B@1ef3ccd)  queue size=5
4114:[callback]writeToStdout(obj=1,null,[B@180f545)  queue size=0
4115:[callback]writeToStdout(obj=1,null,[B@166aab6)  queue size=0
4116:[callback]writeToStdout(obj=1,null,[B@151ac10)  queue size=0
4117:[callback]writeToStdout(obj=1,null,[B@f77511)  queue size=0
4118:[callback]writeToStdout(obj=1,null,[B@26dfcc)  queue size=0
4119:[callback]writeToStdout(obj=1,null,[B@2eef15)  queue size=0
4120:[callback]writeToStdout(obj=1,null,[B@152853d)  queue size=1
4121:[callback]writeToStdout(obj=1,null,[B@a974c7)  queue size=0
4122:[callback]writeToStdout(obj=1,null,[B@131f2b4)  queue size=0
4123:[callback]writeToStdout(obj=1,null,[B@3526cf)  queue size=1
4124:[callback]writeToStdout(obj=1,null,[B@186ed7a)  queue size=0
4125:[callback]writeToStdout(obj=1,null,[B@150f0a7)  queue size=0
4126:[callback]writeToStdout(obj=1,null,[B@e771f3)  queue size=0
4127:[callback]writeToStdout(obj=1,null,[B@ea3932)  queue size=0
4128:[callback]writeToStdout(obj=1,null,[B@15118a7)  queue size=0
4129:[callback]writeToStdout(obj=1,null,[B@1299f7e)  queue size=0
4130:[callback]writeToStdout(obj=1,null,[B@1a631cc)  queue size=1
4131:[callback]writeToStdout(obj=1,null,[B@f6398)  queue size=0
4132:[callback]writeToStdout(obj=1,null,[B@53a9d5)  queue size=0
4133:[callback]writeToStdout(obj=1,null,[B@b2e752)  queue size=0
4134:[callback]writeToStdout(obj=1,null,[B@170ec24)  queue size=0
4135:[callback]writeToStdout(obj=1,null,[B@9f3e95)  queue size=0
4136:[callback]writeToStdout(obj=1,null,[B@c5d9c1)  queue size=0
4137:[callback]writeToStdout(obj=1,null,[B@15b4ad2)  queue size=0
4138:[callback]writeToStdout(obj=1,null,[B@8d3d62)  queue size=0
4139:[callback]writeToStdout(obj=1,null,[B@b9132a)  queue size=0
4140:[callback]writeToStdout(obj=1,null,[B@996b65)  queue size=0
4141:[callback]writeToStdout(obj=1,null,[B@59c8b5)  queue size=0
4142:[callback]writeToStdout(obj=1,null,[B@881cb3)  queue size=0
4143:[callback]writeToStdout(obj=1,null,[B@143753)  queue size=0
4144:[callback]writeToStdout(obj=1,null,[B@13c4c09)  queue size=0
4145:[callback]writeToStdout(obj=1,null,[B@1a40247)  queue size=0
4146:[callback]writeToStdout(obj=1,null,[B@91a4fb)  queue size=0
4147:[callback]writeToStdout(obj=1,null,[B@1e6978d)  queue size=1
4148:[callback]writeToStdout(obj=1,null,[B@1e7d503)  queue size=0
4149:[callback]writeToStdout(obj=1,null,[B@151dcd6)  queue size=0
4150:[callback]writeToStdout(obj=1,null,[B@1798928)  queue size=0
4151:[callback]writeToStdout(obj=1,null,[B@1ba1d9)  queue size=0
4152:[callback]writeToStdout(obj=1,null,[B@1ed7ac)  queue size=0
4153:[callback]writeToStdout(obj=1,null,[B@e16785)  queue size=0
4154:[callback]writeToStdout(obj=1,null,[B@5388b5)  queue size=0
4155:[callback]writeToStdout(obj=1,null,[B@3461d1)  queue size=0
4156:[callback]writeToStdout(obj=1,null,[B@101e178)  queue size=0
4157:[callback]writeToStdout(obj=1,null,[B@79ac92)  queue size=1
4158:[callback]writeToStdout(obj=1,null,[B@30c963)  queue size=2
4159:[callback]writeToStdout(obj=1,null,[B@f5b2e4)  queue size=0
4160:[callback]writeToStdout(obj=1,null,[B@b3c24f)  queue size=0
4161:[callback]writeToStdout(obj=1,null,[B@199f8e6)  queue size=0
4162:[callback]writeToStdout(obj=1,null,[B@1a4036f)  queue size=0
4163:[callback]writeToStdout(obj=1,null,[B@dd89f9)  queue size=0
4164:[callback]writeToStdout(obj=1,null,[B@8d5aad)  queue size=0
4165:[callback]writeToStdout(obj=1,null,[B@3c35fd)  queue size=0
4166:[callback]writeToStdout(obj=1,null,[B@fc9d2b)  queue size=0
4167:[callback]writeToStdout(obj=1,null,[B@b29c9d)  queue size=0
4168:[callback]writeToStdout(obj=1,null,[B@482bad)  queue size=0
4169:[callback]writeToStdout(obj=1,null,[B@2ba88c)  queue size=0
4170:[callback]writeToStdout(obj=1,null,[B@46a55e)  queue size=1
4171:[callback]writeToStdout(obj=1,null,[B@12fc02)  queue size=0
4172:[callback]writeToStdout(obj=1,null,[B@5f1ba8)  queue size=0
4173:[callback]writeToStdout(obj=1,null,[B@10e820)  queue size=0
4174:[callback]writeToStdout(obj=1,null,[B@1f7abae)  queue size=0
4175:[callback]writeToStdout(obj=1,null,[B@1286b10)  queue size=0
4176:[callback]writeToStdout(obj=1,null,[B@8d2280)  queue size=1
4177:[callback]writeToStdout(obj=1,null,[B@1d4340c)  queue size=0
4178:[callback]writeToStdout(obj=1,null,[B@a51027)  queue size=0
4179:[callback]writeToStdout(obj=1,null,[B@c7833c)  queue size=0
4180:[callback]writeToStdout(obj=1,null,[B@790192)  queue size=0
4181:[callback]writeToStdout(obj=1,null,[B@5646a5)  queue size=0
4182:[callback]writeToStdout(obj=1,null,[B@381a9c)  queue size=0
4183:[callback]writeToStdout(obj=1,null,[B@15b011c)  queue size=0
4184:[callback]writeToStdout(obj=1,null,[B@1a5e65f)  queue size=0
4185:[callback]writeToStdout(obj=1,null,[B@b79701)  queue size=0
4186:[callback]writeToStdout(obj=1,null,[B@11adeb7)  queue size=0
4187:[callback]writeToStdout(obj=1,null,[B@113e8f3)  queue size=0
4188:[callback]writeToStdout(obj=1,null,[B@22e177)  queue size=0
4189:[callback]writeToStdout(obj=1,null,[B@6765)  queue size=0
4190:[callback]writeToStdout(obj=1,null,[B@842e74)  queue size=1
4191:[callback]writeToStdout(obj=1,null,[B@5e9f1)  queue size=2
4192:[callback]writeToStdout(obj=1,null,[B@41f227)  queue size=0
4193:[callback]writeToStdout(obj=1,null,[B@1811e2c)  queue size=0
4194:[callback]writeToStdout(obj=1,null,[B@1e40274)  queue size=0
4195:[callback]writeToStdout(obj=1,null,[B@5d3ac0)  queue size=0
4196:[callback]writeToStdout(obj=1,null,[B@bc312f)  queue size=0
4197:[callback]writeToStdout(obj=1,null,[B@14124d6)  queue size=0
4198:[callback]writeToStdout(obj=1,null,[B@916f80)  queue size=0
4199:[callback]writeToStdout(obj=1,null,[B@2f4813)  queue size=1
4200:[callback]writeToStdout(obj=1,null,[B@24eafa)  queue size=2
4201:[callback]writeToStdout(obj=1,null,[B@1bef987)  queue size=3
4202:[callback]writeToStdout(obj=1,null,[B@f01d52)  queue size=4
4203:[callback]writeToStdout(obj=1,null,[B@152643)  queue size=5
4204:[callback]writeToStdout(obj=1,null,[B@8321c8)  queue size=6
4205:[callback]writeToStdout(obj=1,null,[B@11ee017)  queue size=6
4206:[callback]writeToStdout(obj=1,null,[B@a39de)  queue size=7
4207:[callback]writeToStdout(obj=1,null,[B@15d45d9)  queue size=0
4208:[callback]writeToStdout(obj=1,null,[B@94aa42)  queue size=1
4209:[callback]writeToStdout(obj=1,null,[B@35dc95)  queue size=2
4210:[callback]writeToStdout(obj=1,null,[B@24ea85)  queue size=3
4211:[callback]writeToStdout(obj=1,null,[B@1a0d346)  queue size=2
4212:[callback]writeToStdout(obj=1,null,[B@18eabf6)  queue size=0
4213:[callback]writeToStdout(obj=1,null,[B@1bbd583)  queue size=0
4214:[callback]writeToStdout(obj=1,null,[B@bebb88)  queue size=1
4215:[callback]writeToStdout(obj=1,null,[B@a0a36)  queue size=0
4216:[callback]writeToStdout(obj=1,null,[B@124614c)  queue size=0
4217:[callback]writeToStdout(obj=1,null,[B@16fdcc1)  queue size=0
4218:[callback]writeToStdout(obj=1,null,[B@106433d)  queue size=0
4219:[callback]writeToStdout(obj=1,null,[B@287811)  queue size=0
4220:[callback]writeToStdout(obj=1,null,[B@e2b07b)  queue size=0
4221:[callback]writeToStdout(obj=1,null,[B@b05fcb)  queue size=1
4222:[callback]writeToStdout(obj=1,null,[B@16136f0)  queue size=0
4223:[callback]writeToStdout(obj=1,null,[B@15e00b7)  queue size=1
4224:[callback]writeToStdout(obj=1,null,[B@81018b)  queue size=2
4225:[callback]writeToStdout(obj=1,null,[B@18c6cbc)  queue size=0
4226:[callback]writeToStdout(obj=1,null,[B@36ae83)  queue size=0
4227:[callback]writeToStdout(obj=1,null,[B@1fb24d3)  queue size=1
4228:[callback]writeToStdout(obj=1,null,[B@12ea1dd)  queue size=0
4229:[callback]writeToStdout(obj=1,null,[B@84f566)  queue size=0
4230:[callback]writeToStdout(obj=1,null,[B@10b23cf)  queue size=0
4231:[callback]writeToStdout(obj=1,null,[B@5c2a25)  queue size=0
4232:[callback]writeToStdout(obj=1,null,[B@d2efa1)  queue size=0
4233:[callback]writeToStdout(obj=1,null,[B@725967)  queue size=0
4234:[callback]writeToStdout(obj=1,null,[B@14ba9a2)  queue size=0
4235:[callback]writeToStdout(obj=1,null,[B@6dddcf)  queue size=0
4236:[callback]writeToStdout(obj=1,null,[B@fd4662)  queue size=1
4237:[callback]writeToStdout(obj=1,null,[B@17e615)  queue size=0
4238:[callback]writeToStdout(obj=1,null,[B@10275fa)  queue size=0
4239:[callback]writeToStdout(obj=1,null,[B@8fa0d1)  queue size=0
4240:[callback]writeToStdout(obj=1,null,[B@18706f6)  queue size=1
4241:[callback]writeToStdout(obj=1,null,[B@1da2737)  queue size=0
4242:[callback]writeToStdout(obj=1,null,[B@14492fb)  queue size=1
4243:[callback]writeToStdout(obj=1,null,[B@10dd4c8)  queue size=0
4244:[callback]writeToStdout(obj=1,null,[B@10cafa1)  queue size=0
4245:[callback]writeToStdout(obj=1,null,[B@1de7497)  queue size=0
4246:[callback]writeToStdout(obj=1,null,[B@1b88122)  queue size=0
4247:[callback]writeToStdout(obj=1,null,[B@25ef73)  queue size=1
4248:[callback]writeToStdout(obj=1,null,[B@1e94001)  queue size=0
4249:[callback]writeToStdout(obj=1,null,[B@6937f9)  queue size=1
4250:[callback]writeToStdout(obj=1,null,[B@1d9e5ad)  queue size=0
4251:[callback]writeToStdout(obj=1,null,[B@75d758)  queue size=0
4252:[callback]writeToStdout(obj=1,null,[B@8d0b0f)  queue size=0
4253:[callback]writeToStdout(obj=1,null,[B@1d144a4)  queue size=0
4254:[callback]writeToStdout(obj=1,null,[B@1f18cbe)  queue size=1
4255:[callback]writeToStdout(obj=1,null,[B@14f1726)  queue size=0
4256:[callback]writeToStdout(obj=1,null,[B@178c490)  queue size=0
4257:[callback]writeToStdout(obj=1,null,[B@1b0de2e)  queue size=0
4258:[callback]writeToStdout(obj=1,null,[B@cad437)  queue size=0
4259:[callback]writeToStdout(obj=1,null,[B@329572)  queue size=0
4260:[callback]writeToStdout(obj=1,null,[B@f18d37)  queue size=1
4261:[callback]writeToStdout(obj=1,null,[B@6e3e5e)  queue size=0
4262:[callback]writeToStdout(obj=1,null,[B@1c0b8a0)  queue size=0
4263:[callback]writeToStdout(obj=1,null,[B@199197b)  queue size=0
4264:[callback]writeToStdout(obj=1,null,[B@57dc15)  queue size=0
4265:[callback]writeToStdout(obj=1,null,[B@320399)  queue size=0
4266:[callback]writeToStdout(obj=1,null,[B@18a3a1d)  queue size=1
4267:[callback]writeToStdout(obj=1,null,[B@1ed688f)  queue size=0
4268:[callback]writeToStdout(obj=1,null,[B@16b98c3)  queue size=0
4269:[callback]writeToStdout(obj=1,null,[B@144e858)  queue size=0
4270:[callback]writeToStdout(obj=1,null,[B@f1f34a)  queue size=0
4271:[callback]writeToStdout(obj=1,null,[B@9b87f6)  queue size=0
4272:[callback]writeToStdout(obj=1,null,[B@fb6763)  queue size=0
4273:[callback]writeToStdout(obj=1,null,[B@140b8fd)  queue size=1
4274:[callback]writeToStdout(obj=1,null,[B@30fc1f)  queue size=0
4275:[callback]writeToStdout(obj=1,null,[B@1f88fbd)  queue size=0
4276:[callback]writeToStdout(obj=1,null,[B@1a4eb56)  queue size=0
4277:[callback]writeToStdout(obj=1,null,[B@566633)  queue size=0
4278:[callback]writeToStdout(obj=1,null,[B@4fdf11)  queue size=0
4279:[callback]writeToStdout(obj=1,null,[B@1be0369)  queue size=0
4280:[callback]writeToStdout(obj=1,null,[B@1d1fc02)  queue size=0
4281:[callback]writeToStdout(obj=1,null,[B@f800db)  queue size=0
4282:[callback]writeToStdout(obj=1,null,[B@5364)  queue size=1
4283:[callback]writeToStdout(obj=1,null,[B@162f030)  queue size=1
4284:[callback]writeToStdout(obj=1,null,[B@870e2f)  queue size=0
4285:[callback]writeToStdout(obj=1,null,[B@b44eb4)  queue size=0
4286:[callback]writeToStdout(obj=1,null,[B@19b2faf)  queue size=0
4287:[callback]writeToStdout(obj=1,null,[B@157bf4c)  queue size=0
4288:[callback]writeToStdout(obj=1,null,[B@1d056de)  queue size=0
4289:[callback]writeToStdout(obj=1,null,[B@f70ee1)  queue size=0
4290:[callback]writeToStdout(obj=1,null,[B@1f1e39b)  queue size=0
4291:[callback]writeToStdout(obj=1,null,[B@195ff24)  queue size=0
4292:[callback]writeToStdout(obj=1,null,[B@a1c582)  queue size=0
4293:[callback]writeToStdout(obj=1,null,[B@ae1393)  queue size=0
4294:[callback]writeToStdout(obj=1,null,[B@871e65)  queue size=1
4295:[callback]writeToStdout(obj=1,null,[B@dcb6b4)  queue size=2
4296:[callback]writeToStdout(obj=1,null,[B@5f1c48)  queue size=0
4297:[callback]writeToStdout(obj=1,null,[B@39ea58)  queue size=1
4298:[callback]writeToStdout(obj=1,null,[B@486cdd)  queue size=2
4299:[callback]writeToStdout(obj=1,null,[B@e33af5)  queue size=0
4300:[callback]writeToStdout(obj=1,null,[B@33c3e6)  queue size=0
4301:[callback]writeToStdout(obj=1,null,[B@823c6d)  queue size=1
4302:[callback]writeToStdout(obj=1,null,[B@4d28c7)  queue size=0
4303:[callback]writeToStdout(obj=1,null,[B@179c7cf)  queue size=1
4304:[callback]writeToStdout(obj=1,null,[B@2d0483)  queue size=2
4305:[callback]writeToStdout(obj=1,null,[B@1836aea)  queue size=3
4306:[callback]writeToStdout(obj=1,null,[B@e0420b)  queue size=3
4307:[callback]writeToStdout(obj=1,null,[B@10ff62a)  queue size=4
4308:[callback]writeToStdout(obj=1,null,[B@ea7549)  queue size=5
4309:[callback]writeToStdout(obj=1,null,[B@ba175f)  queue size=6
4310:[callback]writeToStdout(obj=1,null,[B@1549ceb)  queue size=0
4311:[callback]writeToStdout(obj=1,null,[B@a30fd)  queue size=0
4312:[callback]writeToStdout(obj=1,null,[B@11650d6)  queue size=0
4313:[callback]writeToStdout(obj=1,null,[B@1532fc)  queue size=0
4314:[callback]writeToStdout(obj=1,null,[B@1c64ed8)  queue size=0
4315:[callback]writeToStdout(obj=1,null,[B@626fd2)  queue size=0
4316:[callback]writeToStdout(obj=1,null,[B@9b777a)  queue size=0
4317:[callback]writeToStdout(obj=1,null,[B@c12978)  queue size=0
4318:[callback]writeToStdout(obj=1,null,[B@189c12a)  queue size=0
4319:[callback]writeToStdout(obj=1,null,[B@e8c7db)  queue size=0
4320:[callback]writeToStdout(obj=1,null,[B@992fa5)  queue size=0
4321:[callback]writeToStdout(obj=1,null,[B@10718b7)  queue size=1
4322:[callback]writeToStdout(obj=1,null,[B@e7ce4c)  queue size=0
4323:[callback]writeToStdout(obj=1,null,[B@99176f)  queue size=0
4324:[callback]writeToStdout(obj=1,null,[B@d1ad08)  queue size=0
4325:[callback]writeToStdout(obj=1,null,[B@1b70f9e)  queue size=1
4326:[callback]writeToStdout(obj=1,null,[B@1627c16)  queue size=2
4327:[callback]writeToStdout(obj=1,null,[B@c0890f)  queue size=0
4328:[callback]writeToStdout(obj=1,null,[B@666d83)  queue size=0
4329:[callback]writeToStdout(obj=1,null,[B@9fd062)  queue size=0
4330:[callback]writeToStdout(obj=1,null,[B@29f93b)  queue size=1
4331:[callback]writeToStdout(obj=1,null,[B@1a998c7)  queue size=0
4332:[callback]writeToStdout(obj=1,null,[B@16d4b50)  queue size=0
4333:[callback]writeToStdout(obj=1,null,[B@6b93c5)  queue size=0
4334:[callback]writeToStdout(obj=1,null,[B@b28980)  queue size=0
4335:[callback]writeToStdout(obj=1,null,[B@161509b)  queue size=0
4336:[callback]writeToStdout(obj=1,null,[B@1f30035)  queue size=0
4337:[callback]writeToStdout(obj=1,null,[B@92af24)  queue size=0
4338:[callback]writeToStdout(obj=1,null,[B@287b58)  queue size=0
4339:[callback]writeToStdout(obj=1,null,[B@1b9f88b)  queue size=1
4340:[callback]writeToStdout(obj=1,null,[B@6c9ec6)  queue size=0
4341:[callback]writeToStdout(obj=1,null,[B@12beeec)  queue size=0
4342:[callback]writeToStdout(obj=1,null,[B@152e961)  queue size=0
4343:[callback]writeToStdout(obj=1,null,[B@57f57f)  queue size=0
4344:[callback]writeToStdout(obj=1,null,[B@b68e0e)  queue size=0
4345:[callback]writeToStdout(obj=1,null,[B@128594c)  queue size=0
4346:[callback]writeToStdout(obj=1,null,[B@1feaf06)  queue size=0
4347:[callback]writeToStdout(obj=1,null,[B@194ba17)  queue size=0
4348:[callback]writeToStdout(obj=1,null,[B@14562c5)  queue size=0
4349:[callback]writeToStdout(obj=1,null,[B@577c5e)  queue size=0
4350:[callback]writeToStdout(obj=1,null,[B@1a631c2)  queue size=0
4351:[callback]writeToStdout(obj=1,null,[B@ce796)  queue size=0
4352:[callback]writeToStdout(obj=1,null,[B@1384ed5)  queue size=0
4353:[callback]writeToStdout(obj=1,null,[B@1bf8cd5)  queue size=0
4354:[callback]writeToStdout(obj=1,null,[B@b70648)  queue size=0
4355:[callback]writeToStdout(obj=1,null,[B@1fd9cd5)  queue size=0
4356:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
4357:[SERVER]SERVER LOOP: invoke stop(pid=0)
4358:[SERVER]SERVER LOOP: reply sent
4359:[callback]logMessage(obj=1,null,[1] Execution stopped.
)  queue size=0
4360:[callback]setStatus(obj=3,25,Execution stopped.)  queue size=1
4361:[callback]setStatus(obj=3,25,)  queue size=1
4362:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=2
4363:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=3
4364:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=4
4365:[callback]removeHighlights(obj=3,25,-1)  queue size=5
4366:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=6
4367:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=7
4368:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=8
4369:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=9
4370:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=10
4371:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=11
4372:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=12
4373:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=13
4374:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=14
4375:[callback]setBlanks(obj=3,25,9,14)  queue size=15
4376:[callback]refreshDisplay(obj=3,25)  queue size=16
4377:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=17
4378:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=18
4379:[callback]processStopped(obj=1,null,1)  queue size=19
4380:[SERVER]SERVER LOOP: invoke queryState(pid=0)
4381:[SERVER]SERVER LOOP: reply sent
4382:[SERVER]SERVER LOOP: invoke makeStackFrameID(pid=0)
4383:[SERVER]SERVER LOOP: reply sent
4384:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
4385:[SERVER]SERVER LOOP: reply sent
4386:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
4387:[SERVER]SERVER LOOP: reply sent
4388:[callback]logMessage(obj=1,null,[1] Flushing data cache.
)  queue size=0
4389:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
4390:[SERVER]SERVER LOOP: reply sent
4391:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
4392:[SERVER]SERVER LOOP: reply sent
4393:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
4394:[SERVER]SERVER LOOP: reply sent
4395:[SERVER]SERVER LOOP: invoke computeCallerFrame(pid=0)
4396:[SERVER]SERVER LOOP: reply sent
4397:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
4398:[SERVER]SERVER LOOP: reply sent
4399:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
4400:[SERVER]SERVER LOOP: reply sent
4401:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
4402:[SERVER]SERVER LOOP: reply sent
4403:[SERVER]SERVER LOOP: invoke getFramePointer(pid=0)
4404:[SERVER]SERVER LOOP: reply sent
4405:[SERVER]SERVER LOOP: invoke getPC(pid=0)
4406:[SERVER]SERVER LOOP: reply sent
4407:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
4408:[SERVER]SERVER LOOP: reply sent
4409:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4410:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4411:[SERVER]SERVER LOOP: reply sent
4412:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4413:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4414:[SERVER]SERVER LOOP: reply sent
4415:[SERVER]SERVER LOOP: invoke getPC(pid=0)
4416:[SERVER]SERVER LOOP: reply sent
4417:[SERVER]SERVER LOOP: invoke getPC(pid=0)
4418:[SERVER]SERVER LOOP: reply sent
4419:[SERVER]SERVER LOOP: invoke getPC(pid=0)
4420:[SERVER]SERVER LOOP: reply sent
4421:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
4422:[SERVER]SERVER LOOP: reply sent
4423:[SERVER]SERVER LOOP: invoke getPC(pid=0)
4424:[SERVER]SERVER LOOP: reply sent
4425:[SERVER]SERVER LOOP: invoke computeLocation(pid=0)
4426:[SERVER]SERVER LOOP: reply sent
4427:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4428:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4429:[SERVER]SERVER LOOP: reply sent
4430:[SERVER]SERVER LOOP: ascync reply to resume(pid=0)
4431:[SERVER]SERVER LOOP: invoke resume(pid=0)
4432:[SERVER]SERVER LOOP: reply sent
4433:[SERVER]SERVER LOOP: ascync reply to resume(pid=1)
4434:[SERVER]SERVER LOOP: invoke resume(pid=1)
4435:[SERVER]SERVER LOOP: reply sent
4436:[SERVER]SERVER LOOP: ascync reply to resume(pid=2)
4437:[SERVER]SERVER LOOP: invoke resume(pid=2)
4438:[SERVER]SERVER LOOP: reply sent
4439:[SERVER]SERVER LOOP: ascync reply to resume(pid=3)
4440:[SERVER]SERVER LOOP: invoke resume(pid=3)
4441:[SERVER]SERVER LOOP: reply sent
4442:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=0
4443:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=1
4444:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=2
4445:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=3
4446:[callback]setStatus(obj=3,25,Process running.)  queue size=4
4447:[callback]processResumed(obj=1,null)  queue size=5
4448:[callback]writeToStdout(obj=1,null,[B@cee271)  queue size=6
4449:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=4
4450:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=5
4451:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=6
4452:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=7
4453:[callback]setStatus(obj=7,26,Process running.)  queue size=8
4454:[callback]processResumed(obj=5,null)  queue size=9
4455:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=10
4456:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=11
4457:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=12
4458:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=13
4459:[callback]setStatus(obj=11,27,Process running.)  queue size=14
4460:[callback]writeToStdout(obj=1,null,[B@749436)  queue size=15
4461:[callback]processResumed(obj=9,null)  queue size=16
4462:[callback]logMessage(obj=1,null,[4] Process is already executing.
)  queue size=17
4463:[callback]setStatus(obj=15,28,Process is already executing.)  queue size=18
4464:[callback]writeToStdout(obj=1,null,[B@1ae939f)  queue size=19
4465:[callback]writeToStdout(obj=1,null,[B@5db9eb)  queue size=20
4466:[callback]writeToStdout(obj=1,null,[B@15925c0)  queue size=16
4467:[callback]writeToStdout(obj=1,null,[B@1bd9d76)  queue size=17
4468:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4469:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4470:[SERVER]SERVER LOOP: reply sent
4471:[callback]writeToStdout(obj=1,null,[B@1acee78)  queue size=17
4472:[callback]writeToStdout(obj=1,null,[B@5c1eae)  queue size=18
4473:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4474:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4475:[SERVER]SERVER LOOP: reply sent
4476:[callback]writeToStdout(obj=1,null,[B@1e26602)  queue size=19
4477:[callback]writeToStdout(obj=1,null,[B@9722c9)  queue size=19
4478:[callback]writeToStdout(obj=1,null,[B@6ce26e)  queue size=20
4479:[callback]writeToStdout(obj=1,null,[B@85b670)  queue size=19
4480:[callback]writeToStdout(obj=1,null,[B@8ca8ac)  queue size=18
4481:[callback]writeToStdout(obj=1,null,[B@95c5ec)  queue size=19
4482:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4483:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4484:[SERVER]SERVER LOOP: reply sent
4485:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4486:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4487:[SERVER]SERVER LOOP: reply sent
4488:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4489:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4490:[SERVER]SERVER LOOP: reply sent
4491:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4492:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4493:[SERVER]SERVER LOOP: reply sent
4494:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4495:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4496:[SERVER]SERVER LOOP: reply sent
4497:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4498:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4499:[SERVER]SERVER LOOP: reply sent
4500:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4501:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4502:[SERVER]SERVER LOOP: reply sent
4503:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4504:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4505:[SERVER]SERVER LOOP: reply sent
4506:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4507:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4508:[SERVER]SERVER LOOP: reply sent
4509:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4510:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4511:[SERVER]SERVER LOOP: reply sent
4512:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4513:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4514:[SERVER]SERVER LOOP: reply sent
4515:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4516:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4517:[SERVER]SERVER LOOP: reply sent
4518:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4519:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4520:[SERVER]SERVER LOOP: reply sent
4521:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4522:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4523:[SERVER]SERVER LOOP: reply sent
4524:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4525:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4526:[SERVER]SERVER LOOP: reply sent
4527:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4528:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4529:[SERVER]SERVER LOOP: reply sent
4530:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4531:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4532:[SERVER]SERVER LOOP: reply sent
4533:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4534:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4535:[SERVER]SERVER LOOP: reply sent
4536:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4537:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4538:[SERVER]SERVER LOOP: reply sent
4539:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4540:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4541:[SERVER]SERVER LOOP: reply sent
4542:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4543:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4544:[SERVER]SERVER LOOP: reply sent
4545:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=2)
4546:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=2)
4547:[SERVER]SERVER LOOP: reply sent
4548:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=1)
4549:[SERVER]SERVER LOOP: invoke setStackFrame(pid=1)
4550:[SERVER]SERVER LOOP: reply sent
4551:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
4552:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
4553:[SERVER]SERVER LOOP: reply sent
4554:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
4555:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
4556:[SERVER]SERVER LOOP: reply sent
4557:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
4558:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
4559:[SERVER]SERVER LOOP: reply sent
4560:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=1)
4561:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=1)
4562:[SERVER]SERVER LOOP: reply sent
4563:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4564:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4565:[SERVER]SERVER LOOP: reply sent
4566:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4567:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4568:[SERVER]SERVER LOOP: reply sent
4569:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4570:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4571:[SERVER]SERVER LOOP: reply sent
4572:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4573:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4574:[SERVER]SERVER LOOP: reply sent
4575:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4576:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4577:[SERVER]SERVER LOOP: reply sent
4578:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4579:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4580:[SERVER]SERVER LOOP: reply sent
4581:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4582:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4583:[SERVER]SERVER LOOP: reply sent
4584:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4585:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4586:[SERVER]SERVER LOOP: reply sent
4587:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4588:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4589:[SERVER]SERVER LOOP: reply sent
4590:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4591:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4592:[SERVER]SERVER LOOP: reply sent
4593:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4594:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4595:[SERVER]SERVER LOOP: reply sent
4596:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4597:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4598:[SERVER]SERVER LOOP: reply sent
4599:[SERVER]SERVER LOOP: ascync reply to freeStackFrameID(pid=0)
4600:[SERVER]SERVER LOOP: invoke freeStackFrameID(pid=0)
4601:[SERVER]SERVER LOOP: reply sent
4602:[callback]writeToStdout(obj=1,null,[B@19d9c0d)  queue size=12
4603:[callback]writeToStdout(obj=1,null,[B@7056d5)  queue size=13
4604:[callback]writeToStdout(obj=1,null,[B@154c054)  queue size=14
4605:[callback]writeToStdout(obj=1,null,[B@11edceb)  queue size=15
4606:[callback]writeToStdout(obj=1,null,[B@139d115)  queue size=16
4607:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
4608:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
4609:[SERVER]SERVER LOOP: reply sent
4610:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=2)
4611:[SERVER]SERVER LOOP: invoke setStackFrame(pid=2)
4612:[SERVER]SERVER LOOP: reply sent
4613:[callback]writeToStdout(obj=1,null,[B@cdba53)  queue size=0
4614:[callback]writeToStdout(obj=1,null,[B@83de21)  queue size=0
4615:[callback]writeToStdout(obj=1,null,[B@16c75ed)  queue size=0
4616:[callback]writeToStdout(obj=1,null,[B@1b2380e)  queue size=0
4617:[callback]writeToStdout(obj=1,null,[B@17e60a1)  queue size=0
4618:[callback]writeToStdout(obj=1,null,[B@1f9f0f2)  queue size=0
4619:[callback]writeToStdout(obj=1,null,[B@39d325)  queue size=0
4620:[callback]writeToStdout(obj=1,null,[B@5539d8)  queue size=0
4621:[callback]writeToStdout(obj=1,null,[B@148c02f)  queue size=0
4622:[callback]writeToStdout(obj=9,null,[B@14189d0)  queue size=0
4623:[callback]writeToStdout(obj=1,null,[B@1bef5e8)  queue size=0
4624:[callback]writeToStdout(obj=1,null,[B@2585e)  queue size=0
4625:[callback]writeToStdout(obj=1,null,[B@1f796d0)  queue size=0
4626:[callback]writeToStdout(obj=1,null,[B@1ce64f6)  queue size=0
4627:[callback]writeToStdout(obj=1,null,[B@1465ca2)  queue size=0
4628:[callback]writeToStdout(obj=1,null,[B@6bba64)  queue size=0
4629:[callback]writeToStdout(obj=1,null,[B@9a1411)  queue size=0
4630:[callback]writeToStdout(obj=1,null,[B@19ba1d8)  queue size=0
4631:[callback]writeToStdout(obj=1,null,[B@9e75f6)  queue size=0
4632:[callback]writeToStdout(obj=1,null,[B@1e22c75)  queue size=0
4633:[callback]writeToStdout(obj=1,null,[B@1d4eeb5)  queue size=0
4634:[callback]writeToStdout(obj=1,null,[B@83e35b)  queue size=0
4635:[callback]writeToStdout(obj=1,null,[B@c378f6)  queue size=0
4636:[callback]writeToStdout(obj=1,null,[B@13a83cc)  queue size=0
4637:[callback]writeToStdout(obj=1,null,[B@a2d304)  queue size=0
4638:[callback]writeToStdout(obj=1,null,[B@1cbd4f7)  queue size=0
4639:[callback]writeToStdout(obj=1,null,[B@10ade7e)  queue size=0
4640:[callback]writeToStdout(obj=1,null,[B@956254)  queue size=0
4641:[callback]writeToStdout(obj=1,null,[B@16aa42e)  queue size=0
4642:[callback]writeToStdout(obj=1,null,[B@40d611)  queue size=0
4643:[callback]writeToStdout(obj=1,null,[B@a632be)  queue size=0
4644:[callback]writeToStdout(obj=1,null,[B@14d659d)  queue size=0
4645:[callback]writeToStdout(obj=1,null,[B@4a3158)  queue size=0
4646:[callback]writeToStdout(obj=1,null,[B@ed8eb5)  queue size=0
4647:[callback]writeToStdout(obj=1,null,[B@343bb6)  queue size=0
4648:[callback]writeToStdout(obj=1,null,[B@13c3b45)  queue size=0
4649:[callback]writeToStdout(obj=1,null,[B@15738e0)  queue size=0
4650:[callback]writeToStdout(obj=1,null,[B@15726ec)  queue size=0
4651:[callback]writeToStdout(obj=1,null,[B@bc6007)  queue size=0
4652:[callback]writeToStdout(obj=1,null,[B@144752d)  queue size=0
4653:[callback]writeToStdout(obj=1,null,[B@168e429)  queue size=0
4654:[callback]writeToStdout(obj=1,null,[B@15b4492)  queue size=0
4655:[callback]writeToStdout(obj=1,null,[B@f2f0d0)  queue size=0
4656:[callback]writeToStdout(obj=1,null,[B@1a01e8a)  queue size=0
4657:[callback]writeToStdout(obj=1,null,[B@1353154)  queue size=0
4658:[callback]writeToStdout(obj=1,null,[B@1398cac)  queue size=0
4659:[callback]writeToStdout(obj=1,null,[B@1429cf1)  queue size=0
4660:[callback]writeToStdout(obj=1,null,[B@4d93e3)  queue size=0
4661:[callback]writeToStdout(obj=1,null,[B@128215d)  queue size=0
4662:[callback]writeToStdout(obj=1,null,[B@1a697a1)  queue size=0
4663:[callback]writeToStdout(obj=1,null,[B@2cd728)  queue size=0
4664:[callback]writeToStdout(obj=1,null,[B@1e1a0ee)  queue size=0
4665:[callback]writeToStdout(obj=1,null,[B@c954e)  queue size=0
4666:[callback]writeToStdout(obj=1,null,[B@1e5cf0)  queue size=0
4667:[callback]writeToStdout(obj=1,null,[B@167c6fd)  queue size=0
4668:[callback]writeToStdout(obj=1,null,[B@39452f)  queue size=0
4669:[callback]writeToStdout(obj=1,null,[B@1ed13da)  queue size=0
4670:[callback]writeToStdout(obj=1,null,[B@1b25a82)  queue size=0
4671:[callback]writeToStdout(obj=1,null,[B@541b02)  queue size=0
4672:[callback]writeToStdout(obj=1,null,[B@1b94ea2)  queue size=0
4673:[callback]writeToStdout(obj=1,null,[B@d99277)  queue size=0
4674:[callback]writeToStdout(obj=1,null,[B@e86614)  queue size=0
4675:[callback]writeToStdout(obj=1,null,[B@185e90f)  queue size=0
4676:[callback]writeToStdout(obj=1,null,[B@8809ce)  queue size=0
4677:[callback]writeToStdout(obj=1,null,[B@13bc30a)  queue size=0
4678:[callback]writeToStdout(obj=1,null,[B@8201a7)  queue size=0
4679:[callback]writeToStdout(obj=1,null,[B@13a8eb1)  queue size=0
4680:[callback]writeToStdout(obj=1,null,[B@16e1782)  queue size=0
4681:[callback]writeToStdout(obj=1,null,[B@c95daa)  queue size=1
4682:[callback]writeToStdout(obj=1,null,[B@2479a4)  queue size=0
4683:[callback]writeToStdout(obj=1,null,[B@ae3da8)  queue size=0
4684:[callback]writeToStdout(obj=1,null,[B@15200be)  queue size=0
4685:[callback]writeToStdout(obj=1,null,[B@aecb09)  queue size=0
4686:[callback]writeToStdout(obj=1,null,[B@193c366)  queue size=0
4687:[callback]writeToStdout(obj=1,null,[B@199d8)  queue size=0
4688:[callback]writeToStdout(obj=1,null,[B@11b50a1)  queue size=1
4689:[callback]writeToStdout(obj=1,null,[B@4ab40a)  queue size=0
4690:[callback]writeToStdout(obj=1,null,[B@721965)  queue size=0
4691:[callback]writeToStdout(obj=1,null,[B@e14ebc)  queue size=1
4692:[callback]writeToStdout(obj=1,null,[B@1f82253)  queue size=0
4693:[callback]writeToStdout(obj=1,null,[B@1957a34)  queue size=0
4694:[callback]writeToStdout(obj=1,null,[B@8a2006)  queue size=0
4695:[callback]writeToStdout(obj=1,null,[B@3c86e9)  queue size=0
4696:[callback]writeToStdout(obj=1,null,[B@1bd669d)  queue size=0
4697:[callback]writeToStdout(obj=1,null,[B@19be6ee)  queue size=1
4698:[callback]writeToStdout(obj=1,null,[B@56182f)  queue size=0
4699:[callback]writeToStdout(obj=1,null,[B@4de3fe)  queue size=0
4700:[callback]writeToStdout(obj=1,null,[B@1b35ece)  queue size=0
4701:[callback]writeToStdout(obj=1,null,[B@115470e)  queue size=0
4702:[callback]writeToStdout(obj=1,null,[B@1ebf4ff)  queue size=0
4703:[callback]writeToStdout(obj=1,null,[B@21b42f)  queue size=0
4704:[callback]writeToStdout(obj=1,null,[B@bc9673)  queue size=0
4705:[callback]writeToStdout(obj=1,null,[B@1396ef7)  queue size=0
4706:[callback]writeToStdout(obj=1,null,[B@1a422f6)  queue size=0
4707:[callback]writeToStdout(obj=1,null,[B@f36e59)  queue size=0
4708:[callback]writeToStdout(obj=1,null,[B@1d1cdf7)  queue size=0
4709:[callback]writeToStdout(obj=1,null,[B@1292ba7)  queue size=0
4710:[callback]writeToStdout(obj=1,null,[B@1f11e0f)  queue size=0
4711:[SERVER]SERVER LOOP: invoke queryState(pid=0)
4712:[SERVER]SERVER LOOP: reply sent
4713:[callback]writeToStdout(obj=1,null,[B@ec835f)  queue size=0
4714:[SERVER]SERVER LOOP: invoke queryState(pid=1)
4715:[SERVER]SERVER LOOP: reply sent
4716:[callback]writeToStdout(obj=1,null,[B@1a51312)  queue size=0
4717:[callback]writeToStdout(obj=1,null,[B@8730b8)  queue size=0
4718:[callback]writeToStdout(obj=1,null,[B@18fb397)  queue size=0
4719:[callback]writeToStdout(obj=1,null,[B@157b39f)  queue size=0
4720:[callback]writeToStdout(obj=1,null,[B@d1918a)  queue size=0
4721:[callback]writeToStdout(obj=1,null,[B@aa10fc)  queue size=0
4722:[callback]writeToStdout(obj=1,null,[B@1412332)  queue size=0
4723:[callback]writeToStdout(obj=1,null,[B@16db492)  queue size=0
4724:[callback]writeToStdout(obj=1,null,[B@169df00)  queue size=0
4725:[SERVER]SERVER LOOP: ascync reply to setStackFrame(pid=0)
4726:[SERVER]SERVER LOOP: invoke setStackFrame(pid=0)
4727:[SERVER]SERVER LOOP: reply sent
4728:[callback]writeToStdout(obj=1,null,[B@1af8502)  queue size=0
4729:[callback]writeToStdout(obj=1,null,[B@455aa8)  queue size=0
4730:[callback]writeToStdout(obj=1,null,[B@143073a)  queue size=0
4731:[callback]writeToStdout(obj=1,null,[B@18facfb)  queue size=0
4732:[callback]writeToStdout(obj=1,null,[B@1a59490)  queue size=0
4733:[callback]writeToStdout(obj=1,null,[B@1bca1c3)  queue size=0
4734:[callback]writeToStdout(obj=1,null,[B@12022b7)  queue size=0
4735:[callback]writeToStdout(obj=1,null,[B@c74910)  queue size=0
4736:[callback]writeToStdout(obj=1,null,[B@18dfa76)  queue size=0
4737:[callback]writeToStdout(obj=1,null,[B@3680c1)  queue size=0
4738:[callback]writeToStdout(obj=1,null,[B@3f1179)  queue size=0
4739:[callback]writeToStdout(obj=1,null,[B@945b95)  queue size=0
4740:[callback]writeToStdout(obj=1,null,[B@b1684)  queue size=0
4741:[callback]writeToStdout(obj=1,null,[B@1f35e30)  queue size=1
4742:[callback]writeToStdout(obj=1,null,[B@accd65)  queue size=0
4743:[callback]writeToStdout(obj=1,null,[B@e0d16b)  queue size=0
4744:[callback]writeToStdout(obj=1,null,[B@1d4f355)  queue size=0
4745:[callback]writeToStdout(obj=1,null,[B@1b38cdc)  queue size=0
4746:[callback]writeToStdout(obj=1,null,[B@e4d0cd)  queue size=0
4747:[callback]writeToStdout(obj=1,null,[B@484c6b)  queue size=0
4748:[callback]writeToStdout(obj=1,null,[B@913c56)  queue size=0
4749:[callback]writeToStdout(obj=1,null,[B@1107304)  queue size=0
4750:[callback]writeToStdout(obj=1,null,[B@ef4599)  queue size=0
4751:[callback]writeToStdout(obj=1,null,[B@c278b5)  queue size=0
4752:[callback]writeToStdout(obj=1,null,[B@182c2d9)  queue size=0
4753:[callback]writeToStdout(obj=1,null,[B@1c66ec7)  queue size=0
4754:[callback]writeToStdout(obj=1,null,[B@92eb86)  queue size=0
4755:[callback]writeToStdout(obj=1,null,[B@1a4ea4f)  queue size=0
4756:[callback]writeToStdout(obj=1,null,[B@12f195)  queue size=0
4757:[callback]writeToStdout(obj=1,null,[B@1b29f80)  queue size=0
4758:[callback]writeToStdout(obj=1,null,[B@5b24c)  queue size=0
4759:[callback]writeToStdout(obj=1,null,[B@1fcd402)  queue size=0
4760:[callback]writeToStdout(obj=1,null,[B@1c2ec05)  queue size=0
4761:[callback]writeToStdout(obj=1,null,[B@1558dc)  queue size=0
4762:[callback]writeToStdout(obj=1,null,[B@17d03c5)  queue size=0
4763:[callback]writeToStdout(obj=1,null,[B@82a13a)  queue size=0
4764:[callback]writeToStdout(obj=1,null,[B@2726b2)  queue size=0
4765:[callback]writeToStdout(obj=1,null,[B@5da37c)  queue size=0
4766:[callback]writeToStdout(obj=1,null,[B@19845fb)  queue size=0
4767:[callback]writeToStdout(obj=1,null,[B@1a791f)  queue size=0
4768:[callback]writeToStdout(obj=1,null,[B@6179e)  queue size=0
4769:[callback]writeToStdout(obj=1,null,[B@1f89785)  queue size=0
4770:[callback]writeToStdout(obj=1,null,[B@1a3bc8c)  queue size=0
4771:[callback]writeToStdout(obj=1,null,[B@af914c)  queue size=0
4772:[callback]writeToStdout(obj=1,null,[B@6c2a78)  queue size=0
4773:[callback]writeToStdout(obj=1,null,[B@15863e4)  queue size=0
4774:[callback]writeToStdout(obj=1,null,[B@6270b)  queue size=0
4775:[callback]writeToStdout(obj=1,null,[B@4ef630)  queue size=0
4776:[callback]writeToStdout(obj=1,null,[B@4f3ba2)  queue size=0
4777:[callback]writeToStdout(obj=1,null,[B@1d41318)  queue size=0
4778:[callback]writeToStdout(obj=1,null,[B@31bcc8)  queue size=0
4779:[callback]writeToStdout(obj=1,null,[B@160f5bf)  queue size=0
4780:[callback]writeToStdout(obj=1,null,[B@a60191)  queue size=0
4781:[callback]writeToStdout(obj=1,null,[B@b11164)  queue size=0
4782:[callback]writeToStdout(obj=1,null,[B@ecf608)  queue size=0
4783:[callback]writeToStdout(obj=1,null,[B@10cc53e)  queue size=0
4784:[callback]writeToStdout(obj=1,null,[B@1697023)  queue size=0
4785:[callback]writeToStdout(obj=1,null,[B@1412b61)  queue size=0
4786:[callback]writeToStdout(obj=1,null,[B@187275d)  queue size=0
4787:[callback]writeToStdout(obj=1,null,[B@2982d8)  queue size=1
4788:[callback]writeToStdout(obj=1,null,[B@14d55de)  queue size=0
4789:[callback]writeToStdout(obj=1,null,[B@40627c)  queue size=0
4790:[callback]writeToStdout(obj=1,null,[B@101fa9e)  queue size=0
4791:[callback]writeToStdout(obj=1,null,[B@eccfe7)  queue size=0
4792:[callback]writeToStdout(obj=1,null,[B@14560cf)  queue size=0
4793:[callback]writeToStdout(obj=1,null,[B@1d6e3d2)  queue size=0
4794:[callback]writeToStdout(obj=1,null,[B@4745cf)  queue size=0
4795:[callback]writeToStdout(obj=1,null,[B@1384a6a)  queue size=0
4796:[callback]writeToStdout(obj=1,null,[B@9daa17)  queue size=0
4797:[callback]writeToStdout(obj=1,null,[B@109dcbb)  queue size=0
4798:[callback]writeToStdout(obj=1,null,[B@7aa187)  queue size=0
4799:[callback]writeToStdout(obj=1,null,[B@102ae84)  queue size=0
4800:[callback]writeToStdout(obj=1,null,[B@10f8ee4)  queue size=0
4801:[callback]writeToStdout(obj=1,null,[B@6e3e28)  queue size=0
4802:[callback]writeToStdout(obj=1,null,[B@1b2b450)  queue size=0
4803:[callback]writeToStdout(obj=1,null,[B@15c13ef)  queue size=0
4804:[callback]writeToStdout(obj=1,null,[B@20dcb7)  queue size=0
4805:[callback]writeToStdout(obj=1,null,[B@17aa2a8)  queue size=0
4806:[callback]writeToStdout(obj=1,null,[B@4ce427)  queue size=0
4807:[callback]writeToStdout(obj=9,null,[B@16c2c0)  queue size=0
4808:[callback]writeToStdout(obj=1,null,[B@4bd173)  queue size=0
4809:[callback]writeToStdout(obj=13,null,[B@1a3eab6)  queue size=0
4810:[callback]writeToStdout(obj=1,null,[B@867fad)  queue size=0
4811:[callback]writeToStdout(obj=9,null,[B@285d14)  queue size=0
4812:[callback]writeToStdout(obj=1,null,[B@1f6ef01)  queue size=0
4813:[callback]writeToStdout(obj=13,null,[B@c54654)  queue size=0
4814:[callback]writeToStdout(obj=1,null,[B@18c6982)  queue size=0
4815:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
4816:[SERVER]SERVER LOOP: invoke stop(pid=0)
4817:[SERVER]SERVER LOOP: reply sent
4818:[SERVER]SERVER LOOP: invoke waitForStop(pid=0)
4819:[SERVER]SERVER LOOP: reply sent
4820:[callback]logMessage(obj=1,null,[1] Execution stopped.
)  queue size=0
4821:[callback]setStatus(obj=3,25,Execution stopped.)  queue size=0
4822:[callback]setStatus(obj=3,25,)  queue size=1
4823:[callback]updateComponent(obj=3,25,id=id1
 able=0
 )  queue size=2
4824:[callback]updateComponent(obj=3,25,id=id0
 able=0
 )  queue size=3
4825:[callback]updateComponent(obj=3,25,id=id2
 tip=No image data yet
 )  queue size=4
4826:[callback]removeHighlights(obj=3,25,-1)  queue size=5
4827:[callback]setLine(obj=3,25,0,Image specifications: 8-bit gray scale -- scaled)  queue size=6
4828:[callback]setLine(obj=3,25,1,Image specification not yet valid -- specify a non-zero address)  queue size=7
4829:[callback]setLine(obj=3,25,2,  Address    : 0x0)  queue size=8
4830:[callback]setLine(obj=3,25,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=9
4831:[callback]setLine(obj=3,25,4,  Auto-update: on)  queue size=10
4832:[callback]setLine(obj=3,25,5, Timed-update: off)  queue size=11
4833:[callback]setLine(obj=3,25,6,    Scaling  : on)  queue size=12
4834:[callback]setLine(obj=3,25,7,  0 -- number of times image was read from memory.)  queue size=13
4835:[callback]setLine(obj=3,25,8,  0 -- number of times image changed and was updated to display)  queue size=14
4836:[callback]setBlanks(obj=3,25,9,14)  queue size=10
4837:[callback]refreshDisplay(obj=3,25)  queue size=11
4838:[callback]setScrollBar(obj=3,25,0,15,0,8,14)  queue size=12
4839:[callback]setStatus(obj=3,25,Specify a non-zero address.)  queue size=13
4840:[callback]processStopped(obj=1,null,1)  queue size=14
4841:[SERVER]SERVER LOOP: ascync reply to terminate(pid=0)
4842:[SERVER]SERVER LOOP: invoke terminate(pid=0)
4843:[SERVER]SERVER LOOP: reply sent
4844:[SERVER]SERVER LOOP: ascync reply to stop(pid=0)
4845:[SERVER]SERVER LOOP: invoke stop(pid=0)
4846:[SERVER]SERVER LOOP: reply sent
4847:[SERVER]SERVER LOOP: invoke waitForStop(pid=0)
4848:[SERVER]SERVER LOOP: reply sent
4849:[callback]logMessage(obj=1,null,[1] Process is not executing.
)  queue size=15
4850:[callback]setStatus(obj=3,25,Process is not executing.)  queue size=16
4851:[callback]logMessage(obj=1,null,[1] C:\workspace-mide\graphics_pipeline\code\grmain\grmain: Process terminated
)  queue size=17
4852:[callback]setHighlight(obj=3,25,0,4)  queue size=18
4853:[callback]setTimerUpdate(obj=3,25,0)  queue size=19
4854:[callback]setStatus(obj=3,25,No process.)  queue size=20
4855:[callback]processTerminated(obj=1,null)  queue size=21
4856:[SERVER]SERVER LOOP: ascync reply to terminate(pid=0)
4857:[SERVER]SERVER LOOP: invoke terminate(pid=0)
4858:[SERVER]SERVER LOOP: reply sent
4859:[SERVER]SERVER LOOP: ascync reply to stop(pid=1)
4860:[SERVER]SERVER LOOP: invoke stop(pid=1)
4861:[SERVER]SERVER LOOP: reply sent
4862:[SERVER]SERVER LOOP: invoke waitForStop(pid=1)
4863:[SERVER]SERVER LOOP: reply sent
4864:[SERVER]SERVER LOOP: invoke queryState(pid=0)
4865:[SERVER]SERVER LOOP: reply sent
4866:[callback]logMessage(obj=1,null,[2] Execution stopped.
)  queue size=7
4867:[callback]setStatus(obj=7,26,Execution stopped.)  queue size=8
4868:[callback]setStatus(obj=7,26,)  queue size=9
4869:[callback]updateComponent(obj=7,26,id=id1
 able=0
 )  queue size=10
4870:[callback]updateComponent(obj=7,26,id=id0
 able=0
 )  queue size=11
4871:[callback]updateComponent(obj=7,26,id=id2
 tip=No image data yet
 )  queue size=12
4872:[callback]removeHighlights(obj=7,26,-1)  queue size=13
4873:[callback]setLine(obj=7,26,0,Image specifications: 8-bit gray scale -- scaled)  queue size=14
4874:[callback]setLine(obj=7,26,1,Image specification not yet valid -- specify a non-zero address)  queue size=15
4875:[callback]setLine(obj=7,26,2,  Address    : 0x0)  queue size=16
4876:[callback]setLine(obj=7,26,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=17
4877:[callback]setLine(obj=7,26,4,  Auto-update: on)  queue size=18
4878:[callback]setLine(obj=7,26,5, Timed-update: off)  queue size=19
4879:[callback]setLine(obj=7,26,6,    Scaling  : on)  queue size=20
4880:[callback]setLine(obj=7,26,7,  0 -- number of times image was read from memory.)  queue size=21
4881:[callback]setLine(obj=7,26,8,  0 -- number of times image changed and was updated to display)  queue size=22
4882:[callback]setBlanks(obj=7,26,9,14)  queue size=23
4883:[callback]refreshDisplay(obj=7,26)  queue size=24
4884:[callback]setScrollBar(obj=7,26,0,15,0,8,14)  queue size=25
4885:[callback]setStatus(obj=7,26,Specify a non-zero address.)  queue size=26
4886:[callback]processStopped(obj=5,null,1)  queue size=27
4887:[SERVER]SERVER LOOP: ascync reply to terminate(pid=1)
4888:[SERVER]SERVER LOOP: invoke terminate(pid=1)
4889:[SERVER]SERVER LOOP: reply sent
4890:[callback]logMessage(obj=1,null,[2] Process is not executing.
)  queue size=26
4891:[SERVER]SERVER LOOP: ascync reply to stop(pid=2)
4892:[SERVER]SERVER LOOP: invoke stop(pid=2)
4893:[SERVER]SERVER LOOP: reply sent
4894:[SERVER]SERVER LOOP: invoke waitForStop(pid=2)
4895:[SERVER]SERVER LOOP: reply sent
4896:[callback]setStatus(obj=7,26,Process is not executing.)  queue size=25
4897:[callback]logMessage(obj=1,null,[2] C:\workspace-mide\graphics_pipeline\code\displaymain\displaymain: Process terminated
)  queue size=26
4898:[callback]setHighlight(obj=7,26,0,4)  queue size=27
4899:[callback]setTimerUpdate(obj=7,26,0)  queue size=28
4900:[callback]setStatus(obj=7,26,No process.)  queue size=29
4901:[callback]processTerminated(obj=5,null)  queue size=30
4902:[callback]logMessage(obj=1,null,[3] Execution stopped.
)  queue size=31
4903:[callback]setStatus(obj=11,27,Execution stopped.)  queue size=32
4904:[callback]setStatus(obj=11,27,)  queue size=33
4905:[callback]updateComponent(obj=11,27,id=id1
 able=0
 )  queue size=34
4906:[callback]updateComponent(obj=11,27,id=id0
 able=0
 )  queue size=35
4907:[callback]updateComponent(obj=11,27,id=id2
 tip=No image data yet
 )  queue size=36
4908:[callback]removeHighlights(obj=11,27,-1)  queue size=37
4909:[callback]setLine(obj=11,27,0,Image specifications: 8-bit gray scale -- scaled)  queue size=38
4910:[callback]setLine(obj=11,27,1,Image specification not yet valid -- specify a non-zero address)  queue size=39
4911:[callback]setLine(obj=11,27,2,  Address    : 0x0)  queue size=40
4912:[callback]setLine(obj=11,27,3,     Size    : 0 height x 0 width x 8 bits (0 bytes))  queue size=41
4913:[callback]setLine(obj=11,27,4,  Auto-update: on)  queue size=42
4914:[callback]setLine(obj=11,27,5, Timed-update: off)  queue size=43
4915:[callback]setLine(obj=11,27,6,    Scaling  : on)  queue size=44
4916:[callback]setLine(obj=11,27,7,  0 -- number of times image was read from memory.)  queue size=45
4917:[callback]setLine(obj=11,27,8,  0 -- number of times image changed and was updated to display)  queue size=46
4918:[callback]setBlanks(obj=11,27,9,12)  queue size=47
4919:[callback]refreshDisplay(obj=11,27)  queue size=48
4920:[callback]setScrollBar(obj=11,27,0,13,0,8,12)  queue size=49
4921:[callback]setStatus(obj=11,27,Specify a non-zero address.)  queue size=50
4922:[callback]processStopped(obj=9,null,1)  queue size=51
4923:[SERVER]SERVER LOOP: ascync reply to terminate(pid=2)
4924:[SERVER]SERVER LOOP: invoke terminate(pid=2)
4925:[SERVER]SERVER LOOP: reply sent
4926:[SERVER]SERVER LOOP: ascync reply to sendValueUpdate(pid=0)
4927:[SERVER]SERVER LOOP: invoke sendValueUpdate(pid=0)
4928:[SERVER]SERVER LOOP: reply sent
4929:[SERVER]SERVER LOOP: ascync reply to terminate(pid=3)
4930:[SERVER]SERVER LOOP: invoke terminate(pid=3)
4931:[SERVER]SERVER LOOP: reply sent
4932:[SERVER]SERVER LOOP: ascync reply to shutdown(pid=0)
4933:[SERVER]SERVER LOOP: invoke shutdown(pid=0)
4934:[SERVER]SERVER LOOP: reply sent
4935:[callback]logMessage(obj=1,null,[3] Process is not executing.
)  queue size=52
4936:[callback]setStatus(obj=11,27,Process is not executing.)  queue size=53
4937:[callback]logMessage(obj=1,null,[3] C:\workspace-mide\graphics_pipeline\code\rendermain0\rendermain0: Process terminated
)  queue size=54
4938:[callback]setHighlight(obj=11,27,0,4)  queue size=55
4939:[callback]setTimerUpdate(obj=11,27,0)  queue size=56
4940:[callback]setStatus(obj=11,27,No process.)  queue size=57
4941:[callback]processTerminated(obj=9,null)  queue size=58
4942:[callback]logMessage(obj=1,null,[4] C:\workspace-mide\graphics_pipeline\code\rendermain1\rendermain1: Process terminated
)  queue size=59
4943:[callback]setHighlight(obj=15,28,0,4)  queue size=60
4944:[callback]setTimerUpdate(obj=15,28,0)  queue size=61
4945:[callback]setStatus(obj=15,28,No process.)  queue size=62
4946:[callback]processTerminated(obj=13,null)  queue size=63
4947:[callback]engineShutdown(obj=1,null)  queue size=64
4948:[SERVER]SERVER LOOP: invoke getProcessExitCode(pid=0)
4949:[SERVER]SERVER LOOP: reply sent
4950:[SERVER]SERVER LOOP: invoke queryState(pid=1)
4951:[SERVER]SERVER LOOP: reply sent
4952:[SERVER]SERVER LOOP: invoke getProcessExitCode(pid=1)
4953:[SERVER]SERVER LOOP: reply sent
4954:[SERVER]SERVER LOOP: invoke queryState(pid=2)
4955:[SERVER]SERVER LOOP: reply sent
4956:[SERVER]SERVER LOOP: invoke getProcessExitCode(pid=2)
4957:[SERVER]SERVER LOOP: reply sent
4958:[SERVER]SERVER LOOP: invoke getProcessExitCode(pid=3)
4959:[SERVER]SERVER LOOP: reply sent
4960:[SERVER]About to terminate server read thread
