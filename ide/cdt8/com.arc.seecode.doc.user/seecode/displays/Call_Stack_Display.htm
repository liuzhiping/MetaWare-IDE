<html>

<head>

<title>Call Stack window</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel=StyleSheet href="../default.css">

</head>

<body>

<h1>Call Stack window</h1>

<p>The Call Stack window displays a list of the functions that have been called 
  as a stack. By default, functions on the stack are displayed with the most recently 
  called on the top-most line. Subsequently called functions are added to the 
  top of the stack. To view the information in descending order instead, click 
  the <b>memdown</b> button.</p>

<h2>Using the Call Stack window</h2>

<p>To view local variables corresponding to the selected frame, do any one of 
  the following:</p>

<ul>
  <li>Select a line, and then click the <b>Locals</b> button.</li>
  <li>Right-click a line, and then click <b>Locals</b>.</li>
  <li>Double-click a line.</li>
</ul>

<p>To run the program until it returns to the current frame:

<ol>
<li>Right-click anywhere in the window, and then click <b>Run to cursor</b>.
<p><I>Note:</I>&nbsp;&nbsp;<b>Run to cursor</b> does not work well in the presence of recursive invocations of the same function. The implementation sets a breakpoint at the return address in the current frame; however, the program may stop at that address in a different frame.</p>
</li>
</ol>


<p>Program-counter register values or frame-pointer register values can be displayed. By default, the Call Stack window shows values only for stack elements lacking symbolic information. To toggle which values are displayed, click the <b>pc/fp</b> button.</p>

<p><I>Note:</I>&nbsp;&nbsp;The program-counter and frame-pointer registers have different names on different architectures.</p>


<p>&nbsp;</p>
</body>

</html>
